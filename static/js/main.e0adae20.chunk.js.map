{"version":3,"sources":["App.module.css","commons/commonsCSS.module.css","components/Main/Main.tsx","App.tsx","reducers/index.ts","store/store.ts","index.tsx","components/Main/MainCSS.module.css"],"names":["module","exports","Main","rC","useRef","Array","from","length","e","i","id","value","score","clickBlocked","validClick","continueFlowPopUp","points","setPoints","useState","roundEnd","gameEndRoundsNumber","gameEndRoundsBoolean","winnerRound","winnerRoundState","setWinnerRoundState","winnerGameState","setWinnerGameState","userPlaying","setUserPlaying","userHasStartedThisRound","countdownRound","setCountdownRound","showCountdownRound","showCountdownRoundState","setShowCountdownRoundState","shouldAIstartState","setShouldAIstartState","newGameStarted","setNewGameStarted","AIRandomGridIndex","Math","floor","random","AIAction","async","setTimeout","current","filter","success","checkRoundWinner","then","handleSequence","target","_ref","undefined","console","log","userAction","highlighter","array","letter","_ref2","actionPoints","$","concat","css","copyPoints","rT","cT","slice","forEach","row","every","column","_","push","diagonal","stopTimer","min","sec","mss","mn","document","getElementById","innerHTML","sc","ms","timeX","scoreX","X","O","scoreO","timeO","checkGameEndByRounds","Swal","fire","title","text","icon","showConfirmButton","showDenyButton","showCancelButton","timer","softResetGame","startTimer","addTimerChangeColor","addButtonAnimation","addClass","shakeAnimation","removeButtonAnimation","removeClass","changeColor","removeTimerChangeColor","addFlowPopUp","useEffect","basicOptions","startsIn","resetTimer","selectOptions","confirmButtonText","denyButtonText","confirmButtonColor","denyButtonColor","result","isConfirmed","input","inputValue","roundsValueLS","parseInt","inputOptions","inputValidator","localStorage","setItem","JSON","stringify","isDenied","buttonNewGameHandler","offset","paused","Date","now","render","format","scale","modulo","padding","toString","padStart","miliseconds","textContent","seconds","minutes","requestAnimationFrame","allowOutsideClick","allowEscapeKey","XfinalMin","XfinalSec","XfinalMs","OfinalMin","OfinalSec","OfinalMs","sumTime","Xmin","reduce","partial","el","split","Xsec","Xms","Omin","Osec","Oms","XsecondsToAdd","XminutesToAdd","XremainingSec","OsecondsToAdd","OminutesToAdd","OremainingSec","XSumScore","OSumScore","XSumTime","OSumTime","finalWinner","some","html","getItem","_jsxs","className","background","com","noSelect","children","_jsx","Button","focusRipple","button","variant","sx","color","onClick","participants","participant","pointsTitle","turn","participantName","innerPoints","style","display","rounds","eachTime","smallerMili","eachTimeMini","rowsAndColumns","map","index","eachBox","nextGameIn","nextGameInInner","nextGameText","nextGameNumber","scoreTable","scoreTableTitlesContainer","scoreTableNumeral","scoreTableTime","scoreTableScore","scoreTableYou","scoreTableAI","scoreTableEachScore","scoreTableTitlesContainerLower","scoreTableTotal","App","Routes","Route","path","element","_Fragment","initialState","serverStatus","reducer","state","arguments","action","type","indexChoosen","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","React","StrictMode","Provider","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.e0adae20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__3CDGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noSelect\":\"commonsCSS_noSelect__3G6Ou\",\"noDeco\":\"commonsCSS_noDeco__1atZN\"};","import css from './MainCSS.module.css';\nimport com from '../../commons/commonsCSS.module.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { Button } from '@mui/material/';\nimport Swal from 'sweetalert2';\nimport $ from 'jquery';\nimport { pointsI, highlighterI, handleSequenceI, eachBoxI } from '../../interfaces/interfaces';\n\nconst Main = () => {\n\n  let rC = useRef<eachBoxI[]>(Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))) // rowsAndColumns\n  //let score = useRef<any[]>([{ \"id\": 0, \"X\": 0, \"O\": 0, \"score\": 0, \"time\": 0 }])\n  let score = useRef<any[]>([])\n  //const [ animateButton, setAnimateButton ] = useState<boolean>(false)\n\n  let clickBlocked = useRef(true)\n  let validClick = useRef(false)\n  let continueFlowPopUp = useRef(true)\n  const [ points, setPoints ] = useState<pointsI>({ \"X\": 0, \"O\": 0 })\n  let roundEnd = useRef(false)\n  //let gameEndRoundsNumber = useRef(9) // 10 ROUNDS\n  //let gameEndRoundsNumber = useRef(1) // 2 ROUNDS\n  let gameEndRoundsNumber = useRef(0) // 1 ROUNDS\n  //let gameEndRoundsNumber = useRef(2) // 3 ROUNDS\n  //let gameEndRoundsNumber = useRef(1) // 2 ROUNDS\n  let gameEndRoundsBoolean = useRef(false)\n  let winnerRound = useRef(\"\")\n  const [ winnerRoundState, setWinnerRoundState ] = useState(\"\") // ONLY FOR GAME UI DISPLAY REASONS..\n  const [ winnerGameState, setWinnerGameState ] = useState(\"\") // ONLY FOR GAME UI DISPLAY REASONS..\n  const [ userPlaying, setUserPlaying ] = useState(true)\n  let userHasStartedThisRound = useRef(true)\n  const [ countdownRound, setCountdownRound ] = useState<number>(3)\n  //let countdownRound = useRef<number>(3)\n  let showCountdownRound = useRef<boolean>(false)\n  const [ showCountdownRoundState, setShowCountdownRoundState ] = useState<boolean>(false)\n  const [ shouldAIstartState, setShouldAIstartState ] = useState(false) // ONLY FOR GAME UI DISPLAY REASONS..\n  const [ newGameStarted, setNewGameStarted ] = useState(false)\n  let AIRandomGridIndex = useRef(Math.floor(Math.random() * 9)) // BETWEEN 0 & 8\n\n  const AIAction = async () => {\n\n    let randomTimes = [ 700, 800, 900, 1000, 1100 ]\n    setTimeout(() => {\n      if (rC.current.filter((e: any) => e.value === '').length >= 1) {\n        let success = false\n        do {\n          AIRandomGridIndex.current = Math.floor(Math.random() * 9)\n          if (rC.current[AIRandomGridIndex.current].value === \"\") {\n            rC.current[AIRandomGridIndex.current].value = \"O\"\n            success = true\n            setShouldAIstartState(false)\n            setUserPlaying(true)\n          }\n        } while (success === false)\n      }\n      checkRoundWinner()\n      .then(() => { if (!roundEnd.current) clickBlocked.current = false })\n    }, randomTimes[Math.floor(Math.random() * 5)])\n  }\n\n  const userAction = async ( target: any) => {\n    if (target !== undefined && rC.current[target].value === \"\") {\n      console.log(\"while se ejecuto func de user, valid click\")\n      rC.current[target].value = \"X\"\n      setUserPlaying(false)\n      validClick.current = true\n      clickBlocked.current = true\n    } else validClick.current = false // CLICK IS NOT VALID\n  }\n\n  const handleSequence = async ({ target }: handleSequenceI) => {\n    userAction(target)\n    .then(() => { if (validClick.current) checkRoundWinner() })\n    .then(() => { if (!roundEnd.current && validClick.current) AIAction() })\n  }\n\n  const countdownHandler = () => {\n    setTimeout(() => { // START COUNTDOWN ROUND\n      if (showCountdownRound.current) { // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        setShowCountdownRoundState(true)\n        setCountdownRound(3)\n      }\n    }, 3000)\n    setTimeout(() => {\n      if (showCountdownRound.current) setCountdownRound(2) // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n    }, 4000)\n    setTimeout(() => {\n      if (showCountdownRound.current) setCountdownRound(1) // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n    }, 5000)\n    setTimeout(() => {\n      if (showCountdownRound.current) setCountdownRound(0) // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n    }, 6000)\n    setTimeout(() => {\n      if (showCountdownRound.current) { // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        setShowCountdownRoundState(false)\n        setCountdownRound(3)\n        userHasStartedThisRound.current = !userHasStartedThisRound.current\n      }\n      if (userHasStartedThisRound.current && showCountdownRound.current) { // AUTO-START USER // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        softResetGame()\n        userHasStartedThisRound.current = true\n        setShouldAIstartState(false)\n        startTimer()\n        clickBlocked.current = false\n        showCountdownRound.current = false // TEST\n      } else if (showCountdownRound.current) { // AUTO-START AI // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        softResetGame()\n        userHasStartedThisRound.current = false\n        clickBlocked.current = true\n        setShouldAIstartState(true)\n        startTimer()\n        AIAction()\n        showCountdownRound.current = false // TEST\n      }\n    }, 7000)\n  }\n\n  const highlighter = async ({ array, letter }: highlighterI) => { // GAME END WITH A WINNER\n    actionPoints = actionPoints + 100\n    clickBlocked.current = true\n    roundEnd.current = true\n    setTimeout(() => {\n      $(`#${array[0].id}`)\n        .css(\"background\", \"yellow\")\n    }, 300)\n    setTimeout(() => {\n      $(`#${array[1].id}`)\n        .css(\"background\", \"yellow\")\n    }, 600)\n    setTimeout(() => {\n      $(`#${array[2].id}`)\n        .css(\"background\", \"yellow\")\n    }, 900)\n\n    setTimeout(() => {\n      let copyPoints: pointsI = {...points}\n      copyPoints[letter] = copyPoints[letter] + actionPoints\n      setPoints(copyPoints)\n      winnerRound.current = `${letter}`\n      setTimeout(() => {\n        setWinnerRoundState(`${letter}`) // SYNC WITH POP-UP\n      }, 300)\n    }, 1200)\n\n    // setTimeout(() => { // TEST\n    //     //setWinnerRoundState(`${letter}`) // SYNC WITH POP-UP\n    //     setWinnerGameState(`${letter}`) // SYNC WITH POP-UP\n    // }, 1800) // WINNER SIGN AFTER FINAL POPUP (1700ms)\n    \n  }\n\n  const updateScore = () => {\n\n    setTimeout(() => {\n      let min // MINUTES\n      let sec // SECONDS\n      let mss // MILLISECONDS\n      let mn = document.getElementById('timer_minutes')\n      if (mn !== null) min = mn.innerHTML\n      let sc = document.getElementById('timer_seconds')\n      if (sc !== null) sec = sc.innerHTML\n      let ms = document.getElementById('timer_ms')\n      if (ms !== null) mss = ms.innerHTML\n\n      score.current.push({\n        id: score.current.length,\n        timeX: winnerRound.current === \"X\" || winnerRound.current === \"TIED\" ? `${min}:${sec}:${mss}` : `00:00:000`, // FAKE MS FOR TEST (TIED BY POINTS & TIME)\n        scoreX: winnerRound.current === \"X\" ? actionPoints : 0,\n        X: winnerRound.current === \"TIED\" ? \"➖\" : winnerRound.current === \"X\" ? \"✔️\" : \"❌\",\n        O: winnerRound.current === \"TIED\" ? \"➖\" : winnerRound.current === \"O\" ? \"✔️\" : \"❌\",\n        scoreO: winnerRound.current === \"O\" ? actionPoints : 0,\n        timeO: winnerRound.current === \"O\" || winnerRound.current === \"TIED\" ? `${min}:${sec}:${mss}` : `00:00:000`,\n      })\n    }, 1200) // SYNC WITH HIGHLIGHTER FUNC UPDATE\n  }\n\n  let actionPoints: number = 0\n\n  const checkRoundWinner = async () => {\n    let rT = [0,3,6,9] // rowTargets\n    let cT = [0,1,2,3] // columnsTargets\n    let dT = [0,2,4]   // diagonalTargets\n    rT.slice(0,-1).forEach((e, i) => { // ROW\n      //                        (6, rt[2+1])\n      //                        (3, rt[1+1])\n      //                        (0, rt[0+1])\n      let row = rC.current.slice(e, rT[i+1])\n      if (row.every((e: eachBoxI) => e.value === 'X')) highlighter({ array: row, letter: \"X\" })\n      if (row.every((e: eachBoxI) => e.value === 'O')) highlighter({ array: row, letter: \"O\" })\n    })\n\n    cT.slice(0,-1).forEach((e) => { // COLUMN\n      let column: eachBoxI[] = []\n      cT.slice(0,-1).forEach((_,i) => {\n        //                    [2 + 0 * 3] --> [2 + 1 * 3] --> [2 + 2 * 3]\n        //                    [1 + 0 * 3] --> [1 + 1 * 3] --> [1 + 2 * 3]\n        //                    [0 + 0 * 3] --> [0 + 1 * 3] --> [0 + 2 * 3]\n        column.push(rC.current[e + i * cT.slice(-1)[0]])\n      })\n      if (column.every((e: eachBoxI) => e.value === 'X')) highlighter({ array: column, letter: \"X\" })\n      if (column.every((e: eachBoxI) => e.value === 'O')) highlighter({ array: column, letter: \"O\" })\n    })\n\n    let diagonal: eachBoxI[][] = [[],[]]\n    dT.forEach((e) => { // DIAGONAL\n      //                         [0*2] --> [2*2] --> [4*2]\n      //                         [0+2] --> [2+2] --> [4+2]\n      diagonal[0].push(rC.current[e*2]) // --> \\ <--\n      diagonal[1].push(rC.current[e+2]) // --> / <--\n    })\n\n    diagonal.forEach(e => {\n      if (e.every((e: eachBoxI) => e.value === 'X')) highlighter({ array: e, letter: \"X\" })\n      if (e.every((e: eachBoxI) => e.value === 'O')) highlighter({ array: e, letter: \"O\" })\n    })\n\n     // if (winnerRound.current === \"\") {\n            //   setWinnerRoundState(\"TIED\") // SYNC WITH POP-UP\n            //   clickBlocked.current = true\n            // }\n\n    if (\n      rC.current.filter(e => e.value === '').length === 0\n      && !roundEnd.current\n    ) {\n      roundEnd.current = true // STOP GAME WHEN NO MORE STEPS AVAILABLE\n      setTimeout(() => {\n        //let copyPoints: pointsI = {...points}\n        //copyPoints[letter] = copyPoints[letter] + actionPoints\n        setPoints({ \"X\": 0, \"O\": 0 })\n        winnerRound.current = \"TIED\"\n        setTimeout(() => {\n          setWinnerRoundState(\"TIED\") // SYNC WITH POP-UP\n        }, 300)\n      }, 1200)\n      \n    }\n\n\n\n    if (rC.current.filter(e => e.value === '').length === 0) {\n      roundEnd.current = true // STOP GAME WHEN NO MORE STEPS AVAILABLE\n    }\n\n    if (roundEnd.current) {\n      stopTimer()\n      updateScore()\n      checkGameEndByRounds()\n      setTimeout(() => {\n        if (continueFlowPopUp.current && !gameEndRoundsBoolean.current) {\n          Swal.fire({\n            title:\n              winnerRound.current === \"X\" ?\n              `YOU WIN !` :\n              winnerRound.current === \"O\" ?\n              `AI WIN !` :\n              `TIED GAME`,\n            text:\n              actionPoints === 100 ?\n              `+100 Points` :\n              actionPoints === 200 ?\n              `+200 Points !! Supperrrb !!!` :\n              `no winner, no points.`,\n            icon:\n              winnerRound.current === \"\" ?\n              'info' :\n              'success',\n            showConfirmButton: false,\n            showDenyButton: false,\n            showCancelButton: false,\n            timer: 2000,\n          })\n          setTimeout(() => {\n            // if (winnerRound.current === \"\") {\n            //   setWinnerRoundState(\"TIED\") // SYNC WITH POP-UP\n            //   clickBlocked.current = true\n            // }\n          }, 1200)\n        }\n      }, 1200)\n\n      if (!gameEndRoundsBoolean.current) showCountdownRound.current = true // ARREGLAR ESTO // ENABLES COUNTDOWN VISUALIZATION\n      countdownHandler() // START COUNTDOWN FOR NEXT ROUND\n\n      setTimeout(() => {\n        if (roundEnd.current) addTimerChangeColor() // MAKE SURE THERE ISN'T A NEW GAME TO MAKE THE ANIMATION\n      }, 3200)\n\n\n\n\n    }\n  }\n\n  const addButtonAnimation = () => $(`#buttonStart`).addClass(`${css.shakeAnimation}`)\n  const removeButtonAnimation = () => $(`#buttonStart`).removeClass(`${css.shakeAnimation}`);\n  const addTimerChangeColor = () => $(`#timerBox`).addClass(`${css.changeColor}`);\n  const removeTimerChangeColor = () => $(`#timerBox`).removeClass(`${css.changeColor}`);\n  const addFlowPopUp = () => continueFlowPopUp.current = true;\n  const removeFlowPopUp = () => continueFlowPopUp.current = false;\n\n  useEffect(() => { // BUTTON SHAKE ANIMATION AT VERY FIRST TIME\n    setTimeout(function() {\n      addButtonAnimation()\n    },300);\n  },[])\n  const basicOptions = () => {\n    startsIn()\n    setNewGameStarted(true) // ADD TIMER IN SCREEN\n  }\n\n  const softResetGame = () => {\n    // XfinalMin = 0\n    // XfinalSec = 0\n    // XfinalMs = 0\n    // OfinalMin = 0\n    // OfinalSec = 0\n    // OfinalMs = 0\n    addFlowPopUp()\n    stopTimer()\n    resetTimer()\n    rC.current = Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))\n    clickBlocked.current = true\n    actionPoints = 0;\n    roundEnd.current = false;\n    winnerRound.current = \"\"\n    setWinnerRoundState(\"\")\n    setUserPlaying(true);\n    removeButtonAnimation()\n    removeTimerChangeColor()\n    actionPoints = 0;\n    AIRandomGridIndex.current = Math.floor(Math.random() * 9) // BETWEEN 0 & 8\n    rC.current.forEach(e => {\n      $(`#${e.id}`)\n        .css(\"background\", \"red\")\n    })\n  }\n\n  const hardResetGame = () => {\n    score.current = []\n\n\n\n        //  score.current = [\n        //       {\n        //         id: 0,\n        //         timeX: `10:34:112`,\n        //         scoreX: 100,\n        //         X: \"✔️\",\n        //         O: \"❌\",\n        //         scoreO: 0,\n        //         timeO: `00:00:000`\n        //       },\n        //       {\n        //         id: 1,\n        //         timeX: `00:00:000`,\n        //         scoreX: 0,\n        //         X: \"❌\",\n        //         O: \"✔️\",\n        //         scoreO: 100,\n        //         timeO: `10:34:112`\n        //       }\n        //     ]\n\n\n    addFlowPopUp()\n    stopTimer()\n    resetTimer()\n    rC.current = Array.from({length: 9}, (e,i) => ({ id: i, value: '' })) // rowsAndColumns\n    // rC.current = [ // rowsAndColumns\n    //   { id: 0, value: 'X' },\n    //   { id: 1, value: 'O' },\n    //   { id: 2, value: 'X' },\n    //   { id: 3, value: 'X' },\n    //   { id: 4, value: 'O' },\n    //   { id: 5, value: 'X' },\n    //   { id: 6, value: 'O' },\n    //   { id: 7, value: '' },\n    //   { id: 8, value: 'O' }\n    // ]\n    clickBlocked.current = true\n    setPoints({ \"X\": 0, \"O\": 0 });\n    actionPoints = 0;\n    roundEnd.current = false;\n    winnerRound.current = \"\"\n    setWinnerRoundState(\"\")\n    setUserPlaying(true);\n    removeButtonAnimation()\n    removeTimerChangeColor()\n    actionPoints = 0;\n    AIRandomGridIndex.current = Math.floor(Math.random() * 9) // BETWEEN 0 & 8\n    rC.current.forEach(e => {\n      $(`#${e.id}`)\n      .css(\"background\", \"red\")\n    })\n  }\n\n  const selectOptions = () => {\n    showCountdownRound.current = false\n    setShowCountdownRoundState(false)\n    hardResetGame();\n    removeButtonAnimation()\n    setNewGameStarted(false) // REMOVE TIMER FROM SCREEN\n    Swal.fire({\n      title: `WELCOME TO TIC-TAC-TOE !`,\n      text: 'Please, select who start first..',\n      showDenyButton: true,\n      confirmButtonText: 'LET ME START !',\n      denyButtonText: `    AI STARTS !   `,\n      confirmButtonColor: '#800080', // LEFT OPTION\n      denyButtonColor: '#008000', // RIGHT OPTION\n    })\n    .then((result) => {\n      console.log(\"123123 result\", result)\n      if (result.isConfirmed) { // START USER\n        Swal.fire({\n          title: \"Select number of rounds:\",\n          input: \"select\",\n          inputValue: roundsValueLS !== null ? parseInt(roundsValueLS, 10) + 1 : \"3\", // DEFAULT VALUE\n          inputOptions: {\n            1: \"1\",\n            2: \"2\",\n            3: \"3\",\n            4: \"4\",\n            5: \"5\",\n            10: \"10\",\n            15: \"15\",\n            20: \"20\"\n          },\n          confirmButtonText: 'GO !',\n          confirmButtonColor: '#2e8b57',\n          showCancelButton: false,\n          inputValidator: (value) => {\n            console.log(\"123123 value\", value)\n            gameEndRoundsNumber.current = parseInt(value, 10) - 1 // ONLY SEND WHEN result.isConfirmed\n            localStorage.setItem('roundsValue', JSON.stringify(parseInt(value, 10) - 1))\n          }\n        })\n        .then((result) => {\n          if (result.isConfirmed) {\n            basicOptions()\n            userHasStartedThisRound.current = true\n            setShouldAIstartState(false)\n            setTimeout(() => {\n              startTimer()\n              clickBlocked.current = false\n              showCountdownRound.current = true // ARREGLAR ESTO // ENABLES COUNTDOWN VISUALIZATION\n            }, 4300) // SYNC WITH POP-UP CLOSES\n          }\n          else { // ESCAPE KEY OR CLICK OUTSIDE POPUP\n            console.log(\"123123 rejected\")\n            setTimeout(function() {\n              addButtonAnimation()\n            },300);\n          }\n        })\n      }\n      else if (result.isDenied) { // START AI\n        Swal.fire({\n          title: \"Select number of rounds:\",\n          input: \"select\",\n          inputValue: roundsValueLS !== null ? parseInt(roundsValueLS, 10) + 1 : \"3\", // DEFAULT VALUE\n          inputOptions: {\n            1: \"1\",\n            2: \"2\",\n            3: \"3\",\n            4: \"4\",\n            5: \"5\",\n            10: \"10\",\n            15: \"15\",\n            20: \"20\"\n          },\n          confirmButtonText: 'GO !',\n          confirmButtonColor: '#2e8b57',\n          showCancelButton: false,\n          inputValidator: (value) => {\n            gameEndRoundsNumber.current = parseInt(value, 10) - 1\n            localStorage.setItem('roundsValue', JSON.stringify(parseInt(value, 10) - 1))\n          }\n        })\n        .then((result) => {\n          if (result.isConfirmed) {\n            basicOptions()\n            userHasStartedThisRound.current = false\n            clickBlocked.current = true\n            setShouldAIstartState(true)\n            setTimeout(() => {\n              startTimer()\n              AIAction()\n              showCountdownRound.current = true // ARREGLAR ESTO // ENABLES COUNTDOWN VISUALIZATION\n            }, 4300) // SYNC WITH POP-UP CLOSES\n          }\n          else { // ESCAPE KEY OR CLICK OUTSIDE POPUP\n            console.log(\"123123 rejected\")\n            setTimeout(function() {\n              addButtonAnimation()\n            },300);\n          }\n        })\n      }\n      else { // ESCAPE KEY OR CLICK OUTSIDE POPUP\n        setTimeout(function() {\n          addButtonAnimation()\n        },300); // NECESSARY FOR ADD ANIMATION WHEN USER PRESS SCAPE.. DON'T ASK WHY.\n      }\n    })\n  }\n\n  const buttonNewGameHandler = () => {\n    removeFlowPopUp() // CANCEL WINNER POP-UP WHEN USER CLICK \"NEW GAME\" BUTTON\n    removeButtonAnimation()\n    if (newGameStarted/*  || gameEndRoundsBoolean.current */) {\n      Swal.fire({\n        title: `DO YOU WANT TO START A NEW GAME ?`,\n        text: 'All points gonna be lost !..',\n        icon: 'info',\n        showDenyButton: true,\n        confirmButtonText: 'START NEW GAME !',\n        denyButtonText: `CONTINUE PLAYING !`,\n        confirmButtonColor: '#800080', // LEFT OPTION\n        denyButtonColor: '#008000', // RIGHT OPTION\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          selectOptions() // CONFIRM NEW GAME\n          //showCountdownRound.current = true // ARREGLAR ESTO // ENABLES COUNTDOWN VISUALIZATION\n        }\n        else {\n          addFlowPopUp() // ELSE CONTINUE GAME\n          //showCountdownRound.current = true // ARREGLAR ESTO // ENABLES COUNTDOWN VISUALIZATION\n        }\n      })\n\n    } else {\n      selectOptions() // WHEN NO CURRENT GAME\n      //showCountdownRound.current = true // ARREGLAR ESTO // ENABLES COUNTDOWN VISUALIZATION\n    }\n  }\n\n  let offset = useRef(0);\n  let paused = useRef(true);\n\n  render();\n\n  function startTimer() {\n    if (paused.current) {\n      paused.current = false;\n      offset.current -= Date.now();\n      render();\n    }\n  }\n\n  function stopTimer() {\n    if (!paused.current) {\n      paused.current = true;\n      offset.current += Date.now();\n      render()\n    }\n  }\n\n  function resetTimer() {\n    if (paused.current) {\n      offset.current = 0;\n      render();\n    } else offset.current =- Date.now();\n  }\n\n  function format(value: any, scale: any, modulo: any, padding: any) {\n    value = Math.floor(value / scale) % modulo;\n    return value.toString().padStart(padding, 0);\n  }\n\n  function render() {\n\n    var value = paused.current ? offset.current : Date.now() + offset.current;\n\n    let miliseconds = document.getElementById('timer_ms')\n    if (miliseconds !== null) miliseconds.textContent = format(value, 1, 1000, 3);\n    let seconds = document.getElementById('timer_seconds')\n    if (seconds !== null) seconds.textContent = format(value, 1000, 60, 2);\n    let minutes = document.getElementById('timer_minutes')\n    if (minutes !== null) minutes.textContent = format(value, 60000, 60, 2);\n\n    if(!paused.current) requestAnimationFrame(render);\n  }\n\n  const startsIn = () => {\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n3..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 0)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n2..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 1000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n1..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 2000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `GO !!!`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1300,\n      })\n    }, 3000)\n  }\n\n  // let XfinalMin = 0\n  // let XfinalSec = 0\n  // let XfinalMs = 0\n  // let OfinalMin = 0\n  // let OfinalSec = 0\n  // let OfinalMs = 0\n  let XfinalMin = useRef(0)\n  let XfinalSec = useRef(0)\n  let XfinalMs = useRef(0)\n  let OfinalMin = useRef(0)\n  let OfinalSec = useRef(0)\n  let OfinalMs = useRef(0)\n\n  const sumTime = () => {\n    let Xmin = score.current.reduce((partial, el) => partial + parseInt(el.timeX.split(\":\")[0], 10), 0)\n    let Xsec = score.current.reduce((partial, el) => partial + parseInt(el.timeX.split(\":\")[1], 10), 0)\n    let Xms = score.current.reduce((partial, el) => partial + parseInt(el.timeX.split(\":\")[2], 10), 0)\n    let Omin = score.current.reduce((partial, el) => partial + parseInt(el.timeO.split(\":\")[0], 10), 0)\n    let Osec = score.current.reduce((partial, el) => partial + parseInt(el.timeO.split(\":\")[1], 10), 0)\n    let Oms = score.current.reduce((partial, el) => partial + parseInt(el.timeO.split(\":\")[2], 10), 0)\n\n    let XsecondsToAdd = 0\n    let XminutesToAdd = 0\n\n    if (Xms.toString().length>3) {\n      XfinalMs.current = Xms.toString().slice(-3)\n      XsecondsToAdd = parseInt(Xms.toString().slice(0, -3), 10)\n    } else XfinalMs.current = parseInt(Xms.toString(), 10)\n\n    if (Xsec > 59) {\n      XminutesToAdd = Math.floor(Xsec / 60)\n      let XremainingSec = Xsec - (XminutesToAdd * 60)\n      XfinalSec.current = XremainingSec + XsecondsToAdd\n    } else XfinalSec.current = Xsec + XsecondsToAdd\n\n    let OsecondsToAdd = 0\n    let OminutesToAdd = 0\n\n    if (Oms.toString().length>3) {\n      OfinalMs.current = Oms.toString().slice(-3)\n      OsecondsToAdd = parseInt(Oms.toString().slice(0, -3), 10)\n    } else OfinalMs.current = parseInt(Oms.toString(), 10)\n\n    if (Osec > 59) {\n      OminutesToAdd = Math.floor(Osec / 60)\n      let OremainingSec = Osec - (OminutesToAdd * 60)\n      OfinalSec.current = OremainingSec + OsecondsToAdd\n    } else OfinalSec.current = Osec + OsecondsToAdd\n\n    XfinalMin.current = XminutesToAdd + Xmin\n    OfinalMin.current = OminutesToAdd + Omin\n  }\n\n  sumTime()\n\n  const checkGameEndByRounds = () => { // GAME END BY ROUNDS HANDLER\n    console.log(\"score.current.length\", score.current)\n\n    if (gameEndRoundsNumber.current === score.current.length ) { // GAME END BY ROUNDS\n      // gameEndRoundsBoolean.current = true;\n      // showCountdownRound.current = false // PREVENT DEFAULT NEXT ROUND COUNTDOWN\n\n      //gameEndRoundsBoolean.current = true;\n      gameEndRoundsBoolean.current = true;\n      showCountdownRound.current = false\n      setNewGameStarted(false)\n      \n      setTimeout(() => {\n        addButtonAnimation()\n        //gameEndRoundsBoolean.current = true;\n         // PREVENT DEFAULT NEXT ROUND COUNTDOWN\n      }, 1800) // BUTTON SHAKE AFTER FINAL POPUP (1700ms)\n      //setShowCountdownRoundState(false)\n\n      //console.log(\"123123 333\", XfinalMin.current.toString().concat(XfinalSec.current.toString(), XfinalMs.current.toString()))\n      setTimeout(() => {\n\n        //console.log(\"123123\", XfinalMin.current.toString().concat(XfinalSec.current.toString(), XfinalMs.current.toString()))\n        let XSumScore = score.current.reduce((partial, el) => partial + el.scoreX, 0)\n        let OSumScore = score.current.reduce((partial, el) => partial + el.scoreO, 0)\n        let XSumTime = parseInt(XfinalMin.current.toString().concat(XfinalSec.current.toString(), XfinalMs.current.toString()), 10)\n        let OSumTime = parseInt(OfinalMin.current.toString().concat(OfinalSec.current.toString(), OfinalMs.current.toString()), 10)\n\n        //let finalWinner =\n        //setWinnerGameState(\n        let finalWinner =\n          XSumScore === OSumScore && XSumTime === OSumTime ?\n          \"TIED\" :\n          XSumScore === OSumScore && XSumTime > OSumTime ?\n          \"OByTime\" :\n          XSumScore === OSumScore && XSumTime < OSumTime ?\n          \"XByTime\" :\n          XSumScore > OSumScore ?\n          \"X\" :\n          \"O\"\n        //)\n\n        setTimeout(() => {\n          setWinnerGameState(finalWinner)\n        }, 200) // DELAY WAITS FOR FINAL POPUP\n        \n\n        Swal.fire({\n          title:\n            winnerGameState === \"XByTime\" || finalWinner === \"X\" ?\n            `GAME END !\\nYOU WIN !` :\n            finalWinner === \"OByTime\" || finalWinner === \"O\" ?\n            `GAME END !\\nAI WIN !` :\n            score.current.some(e => e.X === \"✔️\" || e.O === \"✔️\") ? // CHECK IF TIED BY POINTS & TIME HAS AT LEAST A WINNING ROUND, no way !\n            `GAME END !\\nTIED, INCREDIBLE !!` :\n            `GAME END !\\nTIED !`\n            ,\n          html:\n            finalWinner === `XByTime` ? // CHECKED\n              `<div>\n                <div>You have tied in points, but you won by time !</div>\n                <div>Points: ${XSumScore}</div>\n                <div>Time: ${XfinalMin.current.toString().padStart(2,'0')}:${XfinalSec.current.toString().padStart(2,'0')}:${XfinalMs.current.toString().padStart(3,'0')}</div>\n              </div>` :\n            finalWinner === `OByTime` ? // CHECKED\n              `<div>\n                <div>You have tied in points, but AI won by time !</div>\n                <div>Points: ${OSumScore}</div>\n                <div>Time: ${OfinalMin.current.toString().padStart(2,'0')}:${OfinalSec.current.toString().padStart(2,'0')}:${OfinalMs.current.toString().padStart(3,'0')}</div>\n              </div>` :\n            finalWinner === `X` ? // CHECKED\n              `<div>\n                <div>You have won by points !</div>\n                <div>Points: ${XSumScore}</div>\n                <div>Time: ${XfinalMin.current.toString().padStart(2,'0')}:${XfinalSec.current.toString().padStart(2,'0')}:${XfinalMs.current.toString().padStart(3,'0')}</div>\n              </div>` :\n            finalWinner === `O` ? // CHECKED\n              `<div>\n                <div>AI have won by points !</div>\n                <div>Points: ${OSumScore}</div>\n                <div>Time: ${OfinalMin.current.toString().padStart(2,'0')}:${OfinalSec.current.toString().padStart(2,'0')}:${OfinalMs.current.toString().padStart(3,'0')}</div>\n              </div>` :\n            score.current.some(e => e.X === \"✔️\" || e.O === \"✔️\") ? // CHECK IF TIED BY POINTS & TIME HAS AT LEAST A WINNING ROUND\n              `<div>\n                <div>The game is tied, this is really incredible !!</div>\n                <div>Tied by points & time !!!</div>\n                <div>Points: ${XSumScore}</div>\n                <div>Time: ${XfinalMin.current.toString().padStart(2,'0')}:${XfinalSec.current.toString().padStart(2,'0')}:${XfinalMs.current.toString().padStart(3,'0')}</div>\n              </div>` : // ↓↓↓ CHECKED, no way ! ↓↓↓\n              `<div>\n                <div>The game is tied !</div>\n                <div>Tied by points & time !</div>\n                <div>Points: ${XSumScore}</div>\n                <div>Time: ${XfinalMin.current.toString().padStart(2,'0')}:${XfinalSec.current.toString().padStart(2,'0')}:${XfinalMs.current.toString().padStart(3,'0')}</div>\n              </div>`\n          ,\n          icon:\n            'success',\n          showConfirmButton: true,\n          showDenyButton: false,\n          showCancelButton: false,\n          //timer: 2000,\n        })\n      }, 1700) // WAITS FINAL TIME & POINTS TO UPDATE\n    }\n  }\n\n\n  console.log(\"123 score.current\", score.current)\n  console.log(\"123 rC\", rC) // rowsAndColumns\n  console.log(\"123 winnerRound.current\", winnerRound.current) // rowsAndColumns\n\n  let roundsValueLS: string | null = localStorage.getItem('roundsValue');\n  if (roundsValueLS !== null) gameEndRoundsNumber.current = parseInt(roundsValueLS, 10)\n\n  return (\n    <div className={`${css.background} ${com.noSelect}`}>\n      <Button\n        focusRipple={false}\n        id={`buttonStart`}\n        className={css.button}\n        variant=\"outlined\"\n        sx={{ color: 'white', background: 'blue', '&:hover': { background: 'green' } }}\n        onClick={() => {\n          buttonNewGameHandler()\n        }}\n      >\n        NEW GAME\n      </Button>\n      <div className={css.participants}>\n        <div className={css.participant}>\n          <div className={css.pointsTitle}>Points:</div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? null : newGameStarted && userPlaying && !roundEnd.current ? `TURN ` : null }</div>\n          <div className={css.participantName}>You:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.X} </div></div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? `TURN ` : newGameStarted && !userPlaying && !roundEnd.current ? `TURN ` : null }</div>\n          <div className={css.participantName}>AI:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.O} </div></div>\n        </div>\n        <div className={css.finalWinner}>\n          {\n            //gameEndRoundsBoolean.current && roundEnd.current && winnerRoundState === \"X\" ?\n            gameEndRoundsBoolean.current && roundEnd.current && (winnerGameState === \"X\" || winnerGameState === \"XByTime\") ?\n            `GAME WINNER: YOU !` :\n            //gameEndRoundsBoolean.current && roundEnd.current && winnerRoundState === \"O\" ?\n            gameEndRoundsBoolean.current && roundEnd.current && (winnerGameState === \"O\" || winnerGameState === \"OByTime\") ?\n            `GAME WINNER: AI !` :\n            //gameEndRoundsBoolean.current && roundEnd.current && winnerRoundState === \"TIED\" ?\n            gameEndRoundsBoolean.current && roundEnd.current && winnerGameState === \"TIED\" ?\n            `GAME WINNER: TIED !` :\n            !gameEndRoundsBoolean.current && roundEnd.current && winnerRoundState === \"X\" ?\n            `ROUND WINNER: YOU !` :\n            !gameEndRoundsBoolean.current && roundEnd.current && winnerRoundState === \"O\" ?\n            `ROUND WINNER: AI !` :\n            !gameEndRoundsBoolean.current && roundEnd.current && winnerRoundState === \"TIED\" ?\n            `ROUND WINNER: TIED !` :\n            null\n          }\n        </div>\n        <div\n          // style={{\n          //   display: newGameStarted ? 'flex' : 'none'\n          // }}\n          // id={`timerBox`}\n          style={{\n            display: newGameStarted || gameEndRoundsBoolean.current ? 'flex' : 'none'\n          }}\n          className={css.rounds}\n        >\n          Rounds: {gameEndRoundsNumber.current + 1}\n        </div>\n        <div\n          style={{\n            display: newGameStarted ? 'flex' : 'none'\n          }}\n          id={`timerBox`}\n          className={css.timer}\n        >\n          <div>TIME:  </div>\n          <div id={`timer_minutes`} className={css.eachTime}>00</div>:\n          <div id={`timer_seconds`} className={css.eachTime}>00</div>\n          <div className={css.smallerMili}>:</div>\n          <div id={`timer_ms`} className={`${css.smallerMili} ${css.eachTimeMini}`}>000</div>\n        </div>\n      </div >\n      <div className={css.rowsAndColumns}>\n        {\n          rC.current.map((e, index) => {\n            return (\n              <div\n                key={index}\n                id={`${index}`}\n                onClick={(e) => {\n                  if (!clickBlocked.current) {\n                    handleSequence({ target: index })\n                  }\n                }}\n                className={css.eachBox}\n              >\n                { rC.current[index].value }\n              </div>\n            )\n          })\n        }\n        <div\n          style={{\n            display:\n              showCountdownRoundState && showCountdownRound.current ?\n              //showCountdownRoundState ?\n              //showCountdownRound.current ?\n              'flex' :\n              'none'\n          }}\n          className={css.nextGameIn}\n        >\n          {\n            countdownRound === 0 ?\n            <div className={css.nextGameInInner}>Go !!!</div> :\n            <div className={css.nextGameInInner}>\n              <div className={css.nextGameText}> Next round in</div>\n              <div className={css.nextGameNumber}>{countdownRound} </div>\n            </div>\n          }\n        </div>\n      </div>\n      <div className={css.scoreTable}>\n        <div>\n          <div className={css.scoreTableTitlesContainer}>\n            <div className={css.scoreTableNumeral}>#</div>\n            <div className={css.scoreTableTime}>TIME</div>\n            <div className={css.scoreTableScore}>SCORE</div>\n            <div className={css.scoreTableYou}>YOU</div>\n            <div className={css.scoreTableAI}>AI</div>\n            <div className={css.scoreTableScore}>SCORE</div>\n            <div className={css.scoreTableTime}>TIME</div>\n          </div>\n\n          {\n            score.current.map((e,i)=> {\n              return (\n                <div key={i} className={css.scoreTableEachScore}>\n                  <div className={css.scoreTableNumeral}>{e.id + 1}</div>\n                  <div className={css.scoreTableTime}>{ e.timeX === '00:00:000' ? \"➖\" : e.timeX }</div>\n                  <div className={css.scoreTableScore}>{ e.scoreX === 0 ? \"➖\" : e.scoreX }</div>\n                  <div className={css.scoreTableYou}>{ e.X }</div>\n                  <div className={css.scoreTableAI}>{ e.O }</div>\n                  <div className={css.scoreTableScore}>{ e.scoreO === 0 ? \"➖\" : e.scoreO }</div>\n                  <div className={css.scoreTableTime}>{ e.timeO === '00:00:000' ? \"➖\" : e.timeO }</div>\n                </div>\n              )\n            })\n          }\n        </div>\n        <div className={css.scoreTableTitlesContainerLower}>\n          <div className={css.scoreTableNumeral}>#</div>\n          <div className={css.scoreTableTime}>{ `${XfinalMin.current.toString().padStart(2,'0')}:${XfinalSec.current.toString().padStart(2,'0')}:${XfinalMs.current.toString().padStart(3,'0')}` }</div>\n          <div className={css.scoreTableScore}>{ score.current.reduce((partial, el) => partial + el.scoreX, 0) }</div>\n          <div className={css.scoreTableTotal}>TOTAL</div>\n          <div className={css.scoreTableScore}>{ score.current.reduce((partial, el) => partial + el.scoreO, 0) }</div>\n          <div className={css.scoreTableTime}>{ `${OfinalMin.current.toString().padStart(2,'0')}:${OfinalSec.current.toString().padStart(2,'0')}:${OfinalMs.current.toString().padStart(3,'0')}` }</div>\n        </div>\n\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Main;","import { useState, useEffect, useRef } from \"react\";\nimport css from './App.module.css';\nimport './commons/globalSweetAlert2.css';\nimport { useSelector } from 'react-redux';\nimport { Route, Routes, useMatch, useLocation } from \"react-router-dom\";\nimport $ from 'jquery';\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n\n  return (\n   <div className={css.background}>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<>\n              <Main />\n              </>\n            }\n        />        \n      </Routes>\n      </div>\n  )\n}\n\nexport default App;","// import {\n//   recipesI, serverStatusI, navBarFiltersI, settingsFiltersI\n// } from '../interfaces/interfaces';\n\ninterface initialStateI {\n  serverStatus?: string,\n}\n\nconst initialState: initialStateI = {\n  serverStatus: 'asd',\n}\n\nconst reducer = (state = initialState, action: {type: string; payload: any}) => {\n  switch (action.type) {\n    case 'SET_INDEX_CHOOSEN':\n      return {\n        ...state,\n        indexChoosen: action.payload\n      };    \n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n","import { legacy_createStore as createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter basename=\"/tictactoe\">\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"MainCSS_background__1Q1tO\",\"nextGameIn\":\"MainCSS_nextGameIn__3XPK8\",\"nextGameInInner\":\"MainCSS_nextGameInInner__3Te5s\",\"nextGameText\":\"MainCSS_nextGameText__2P-X_\",\"nextGameNumber\":\"MainCSS_nextGameNumber__24lJN\",\"button\":\"MainCSS_button__2c_QR\",\"noAnimation\":\"MainCSS_noAnimation__1uiwW\",\"onone\":\"MainCSS_onone__3mZ_2\",\"shakeAnimation\":\"MainCSS_shakeAnimation__fG_-C\",\"shake\":\"MainCSS_shake__SfRao\",\"changeColor\":\"MainCSS_changeColor__2-mW8\",\"changeCol\":\"MainCSS_changeCol__24VVs\",\"rounds\":\"MainCSS_rounds__zsEAb\",\"timer\":\"MainCSS_timer__3HWC8\",\"eachTime\":\"MainCSS_eachTime__3bWTB\",\"eachTimeMini\":\"MainCSS_eachTimeMini__2eU1d\",\"smallerMili\":\"MainCSS_smallerMili__3jRfz\",\"participants\":\"MainCSS_participants__2fMaH\",\"participant\":\"MainCSS_participant__3Hqsa\",\"turn\":\"MainCSS_turn__3rc7J\",\"blink\":\"MainCSS_blink__3XQfa\",\"participantName\":\"MainCSS_participantName__Nj8p0\",\"pointsTitle\":\"MainCSS_pointsTitle__1Lx4I\",\"points\":\"MainCSS_points__2hJpt\",\"innerPoints\":\"MainCSS_innerPoints__21ZiP\",\"finalWinner\":\"MainCSS_finalWinner__2pYW0\",\"rowsAndColumns\":\"MainCSS_rowsAndColumns__2GrZo\",\"crossCircle\":\"MainCSS_crossCircle__1T8V_\",\"cross\":\"MainCSS_cross__3wO_9\",\"circle\":\"MainCSS_circle__29slD\",\"eachRow\":\"MainCSS_eachRow__3aF6L\",\"eachBox\":\"MainCSS_eachBox__3qaSx\",\"scoreTable\":\"MainCSS_scoreTable__Nnt7l\",\"scoreTableNumeral\":\"MainCSS_scoreTableNumeral__2GDSz\",\"scoreTableTotal\":\"MainCSS_scoreTableTotal__3uZCL\",\"scoreTableYou\":\"MainCSS_scoreTableYou__WDIYu\",\"scoreTableAI\":\"MainCSS_scoreTableAI__2OXOv\",\"scoreTableScore\":\"MainCSS_scoreTableScore__HosE9\",\"scoreTableTime\":\"MainCSS_scoreTableTime__2Q-aB\",\"scoreTableTitlesContainer\":\"MainCSS_scoreTableTitlesContainer__F80md\",\"scoreTableTitlesContainerLower\":\"MainCSS_scoreTableTitlesContainerLower__1gMUs\",\"scoreTableEachScore\":\"MainCSS_scoreTableEachScore__3GDxX\"};"],"sourceRoot":""}