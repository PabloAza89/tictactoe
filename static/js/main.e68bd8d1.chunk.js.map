{"version":3,"sources":["App.module.css","commons/commonsCSS.module.css","components/Main/Main.tsx","App.tsx","reducers/index.ts","store/store.ts","index.tsx","components/Main/MainCSS.module.css"],"names":["module","exports","Main","rC","useRef","Array","from","length","e","i","id","value","score","clickBlocked","validClick","continueFlowPopUp","points","setPoints","useState","gameEnd","winner","winnerState","setWinnerState","userPlaying","setUserPlaying","userHasStartedThisRound","countdownRound","setCountdownRound","showCountdownRound","showCountdownRoundState","setShowCountdownRoundState","shouldAIstartState","setShouldAIstartState","newGameStarted","setNewGameStarted","AIRandomGridIndex","Math","floor","random","AIAction","async","setTimeout","current","filter","success","checkWinner","then","handleSequence","target","_ref","undefined","console","log","userAction","highlighter","array","letter","_ref2","actionPoints","$","concat","css","min","sec","mss","copyPoints","mn","document","getElementById","innerHTML","sc","ms","push","scoreX","X","O","scoreO","time","rT","cT","slice","forEach","row","every","column","_","diagonal","stopTimer","Swal","fire","title","text","icon","showConfirmButton","showDenyButton","showCancelButton","timer","softResetGame","startTimer","addTimerChangeColor","addButtonAnimation","addClass","shakeAnimation","removeButtonAnimation","removeClass","changeColor","removeTimerChangeColor","addFlowPopUp","useEffect","basicOptions","startsIn","resetTimer","selectOptions","confirmButtonText","denyButtonText","confirmButtonColor","denyButtonColor","result","isConfirmed","isDenied","buttonNewGameHandler","offset","paused","Date","now","render","format","scale","modulo","padding","toString","padStart","miliseconds","textContent","seconds","minutes","requestAnimationFrame","allowOutsideClick","allowEscapeKey","_jsxs","className","background","com","noSelect","children","_jsx","Button","button","variant","sx","color","onClick","participants","participant","pointsTitle","turn","participantName","innerPoints","finalWinner","style","display","eachTime","smallerMili","eachTimeMini","rowsAndColumns","map","index","eachBox","nextGameIn","nextGameInInner","nextGameText","nextGameNumber","scoreTable","scoreTableTitlesContainer","scoreTableNumeral","scoreTableScore","scoreTableYou","scoreTableAI","scoreTableTime","scoreTableEachScore","App","Routes","Route","path","element","_Fragment","initialState","serverStatus","reducer","state","arguments","action","type","indexChoosen","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","React","StrictMode","Provider","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.e68bd8d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__3CDGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noSelect\":\"commonsCSS_noSelect__3G6Ou\",\"noDeco\":\"commonsCSS_noDeco__1atZN\"};","import css from './MainCSS.module.css';\nimport com from '../../commons/commonsCSS.module.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { Button } from '@mui/material/';\nimport Swal from 'sweetalert2';\nimport $ from 'jquery';\nimport { pointsI, highlighterI, handleSequenceI, eachBoxI } from '../../interfaces/interfaces';\n\nconst Main = () => {\n\n  let rC = useRef<eachBoxI[]>(Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))) // rowsAndColumns\n  //let score = useRef<any[]>([{ \"id\": 0, \"X\": 0, \"O\": 0, \"score\": 0, \"time\": 0 }])\n  let score = useRef<any[]>([])\n  let clickBlocked = useRef(true)\n  let validClick = useRef(false)\n  let continueFlowPopUp = useRef(true)\n  const [ points, setPoints ] = useState<pointsI>({ \"X\": 0, \"O\": 0 })\n  let gameEnd = useRef(false)\n  let winner = useRef(\"\")\n  const [ winnerState, setWinnerState ] = useState(\"\") // ONLY FOR GAME UI DISPLAY REASONS..\n  const [ userPlaying, setUserPlaying ] = useState(true)\n  let userHasStartedThisRound = useRef(true)\n  const [ countdownRound, setCountdownRound ] = useState<number>(3)\n  //let countdownRound = useRef<number>(3)\n  let showCountdownRound = useRef<boolean>(false)\n  const [ showCountdownRoundState, setShowCountdownRoundState ] = useState<boolean>(false)\n  const [ shouldAIstartState, setShouldAIstartState ] = useState(false) // ONLY FOR GAME UI DISPLAY REASONS..\n  const [ newGameStarted, setNewGameStarted ] = useState(false)\n  let AIRandomGridIndex = useRef(Math.floor(Math.random() * 9)) // BETWEEN 0 & 8\n\n  const AIAction = async () => {\n\n    let randomTimes = [ 700, 800, 900, 1000, 1100 ]\n    setTimeout(() => {\n      if (rC.current.filter((e: any) => e.value === '').length >= 1) {\n        let success = false\n        do {\n          AIRandomGridIndex.current = Math.floor(Math.random() * 9)\n          if (rC.current[AIRandomGridIndex.current].value === \"\") {\n            rC.current[AIRandomGridIndex.current].value = \"O\"\n            success = true\n            setShouldAIstartState(false)\n            setUserPlaying(true)\n          }\n        } while (success === false)\n      }\n      checkWinner()\n      .then(() => { if (!gameEnd.current) clickBlocked.current = false })\n    }, randomTimes[Math.floor(Math.random() * 5)])\n  }\n\n  const userAction = async ( target: any) => {\n    if (target !== undefined && rC.current[target].value === \"\") {\n      console.log(\"while se ejecuto func de user, valid click\")\n      rC.current[target].value = \"X\"\n      setUserPlaying(false)\n      validClick.current = true\n      clickBlocked.current = true\n    } else validClick.current = false // CLICK IS NOT VALID\n  }\n\n  const handleSequence = async ({ target }: handleSequenceI) => {\n    userAction(target)\n    .then(() => { if (validClick.current) checkWinner() })\n    .then(() => { if (!gameEnd.current && validClick.current) AIAction() })\n  }\n\n  const countdownHandler = () => {\n    setTimeout(() => { // START COUNTDOWN ROUND\n      if (showCountdownRound.current) { // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        setShowCountdownRoundState(true)\n        setCountdownRound(3)\n      }\n    }, 3000)\n    setTimeout(() => {\n      if (showCountdownRound.current) setCountdownRound(2) // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n    }, 4000)\n    setTimeout(() => {\n      if (showCountdownRound.current) setCountdownRound(1) // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n    }, 5000)\n    setTimeout(() => {\n      if (showCountdownRound.current) setCountdownRound(0) // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n    }, 6000)\n    setTimeout(() => {\n      if (showCountdownRound.current) { // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        setShowCountdownRoundState(false)\n        setCountdownRound(3)\n        userHasStartedThisRound.current = !userHasStartedThisRound.current\n      }\n      if (userHasStartedThisRound.current && showCountdownRound.current) { // AUTO-START USER // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        softResetGame()\n        userHasStartedThisRound.current = true\n        setShouldAIstartState(false)\n        startTimer()\n        clickBlocked.current = false\n        showCountdownRound.current = false // TEST\n      } else if (showCountdownRound.current) { // AUTO-START AI // PREVENT EXECUTION WHEN USER CLICK \"NEW GAME\"\n        softResetGame()\n        userHasStartedThisRound.current = false\n        clickBlocked.current = true\n        setShouldAIstartState(true)\n        startTimer()\n        AIAction()\n        showCountdownRound.current = false // TEST\n      }\n    }, 7000)\n  }\n\n  const highlighter = async ({ array, letter }: highlighterI) => { // GAME END WITH A WINNER\n    actionPoints = actionPoints + 100\n    clickBlocked.current = true\n    gameEnd.current = true\n    setTimeout(() => {\n      $(`#${array[0].id}`)\n        .css(\"background\", \"yellow\")\n    }, 300)\n    setTimeout(() => {\n      $(`#${array[1].id}`)\n        .css(\"background\", \"yellow\")\n    }, 600)\n    setTimeout(() => {\n      $(`#${array[2].id}`)\n        .css(\"background\", \"yellow\")\n    }, 900)\n\n    setTimeout(() => {\n      let copyPoints: pointsI = {...points}\n      copyPoints[letter] = copyPoints[letter] + actionPoints\n      setPoints(copyPoints)\n      winner.current = `${letter}`\n      setTimeout(() => {\n        setWinnerState(`${letter}`) // SYNC WITH POP-UP\n      }, 300)\n      // TEST\n\n      let min // MINUTES\n      let sec // SECONDS\n      let mss // MILLISECONDS\n      let mn = document.getElementById('timer_minutes')\n      if (mn !== null) min = mn.innerHTML\n      let sc = document.getElementById('timer_seconds')\n      if (sc !== null) sec = sc.innerHTML\n      let ms = document.getElementById('timer_ms')\n      if (ms !== null) mss = ms.innerHTML\n\n      score.current.push({\n        id: score.current.length,\n        scoreX: letter === \"X\" ? actionPoints : 0,\n        X: letter === \"X\" ? \"✔️\" : \"❌\",\n        O: letter === \"O\" ? \"✔️\" : \"❌\",\n        scoreO: letter === \"O\" ? actionPoints : 0,\n        time: `${min}:${sec}:${mss}`\n      })\n\n\n      //\n    }, 1200)\n  }\n\n  let actionPoints: number = 0\n\n  const checkWinner = async () => {\n    let rT = [0,3,6,9] // rowTargets\n    let cT = [0,1,2,3] // columnsTargets\n    let dT = [0,2,4]   // diagonalTargets\n    rT.slice(0,-1).forEach((e, i) => { // ROW\n      //                        (6, rt[2+1])\n      //                        (3, rt[1+1])\n      //                        (0, rt[0+1])\n      let row = rC.current.slice(e, rT[i+1])\n      if (row.every((e: eachBoxI) => e.value === 'X')) highlighter({ array: row, letter: \"X\" })\n      if (row.every((e: eachBoxI) => e.value === 'O')) highlighter({ array: row, letter: \"O\" })\n    })\n\n    cT.slice(0,-1).forEach((e) => { // COLUMN\n      let column: eachBoxI[] = []\n      cT.slice(0,-1).forEach((_,i) => {\n        //                    [2 + 0 * 3] --> [2 + 1 * 3] --> [2 + 2 * 3]\n        //                    [1 + 0 * 3] --> [1 + 1 * 3] --> [1 + 2 * 3]\n        //                    [0 + 0 * 3] --> [0 + 1 * 3] --> [0 + 2 * 3]\n        column.push(rC.current[e + i * cT.slice(-1)[0]])\n      })\n      if (column.every((e: eachBoxI) => e.value === 'X')) highlighter({ array: column, letter: \"X\" })\n      if (column.every((e: eachBoxI) => e.value === 'O')) highlighter({ array: column, letter: \"O\" })\n    })\n\n    let diagonal: eachBoxI[][] = [[],[]]\n    dT.forEach((e) => { // DIAGONAL\n      //                         [0*2] --> [2*2] --> [4*2]\n      //                         [0+2] --> [2+2] --> [4+2]\n      diagonal[0].push(rC.current[e*2]) // --> \\ <--\n      diagonal[1].push(rC.current[e+2]) // --> / <--\n    })\n\n    diagonal.forEach(e => {\n      if (e.every((e: eachBoxI) => e.value === 'X')) highlighter({ array: e, letter: \"X\" })\n      if (e.every((e: eachBoxI) => e.value === 'O')) highlighter({ array: e, letter: \"O\" })\n    })\n\n    if (rC.current.filter(e => e.value === '').length === 0) gameEnd.current = true // STOP GAME WHEN NO MORE STEPS AVAILABLE\n\n    if (gameEnd.current) {\n      stopTimer()\n      setTimeout(() => {\n        if (continueFlowPopUp.current) {\n          Swal.fire({\n            title:\n              winner.current === \"X\" ?\n              `YOU WIN !` :\n              winner.current === \"O\" ?\n              `AI WIN !` :\n              `TIED GAME`,\n            text:\n              actionPoints === 100 ?\n              `+100 Points` :\n              actionPoints === 200 ?\n              `+200 Points !! Supperrrb !!!` :\n              `no winner, no points.`,\n            icon:\n              winner.current === \"\" ?\n              'info' :\n              'success',\n            showConfirmButton: false,\n            showDenyButton: false,\n            showCancelButton: false,\n            timer: 2000,\n          })\n          setTimeout(() => {\n            if (winner.current === \"\") {\n              setWinnerState(\"TIED\") // SYNC WITH POP-UP\n              clickBlocked.current = true\n            }\n          }, 1200)\n        }\n      }, 1200)\n\n      showCountdownRound.current = true // ENABLES COUNTDOWN VISUALIZATION\n      countdownHandler() // START COUNTDOWN FOR NEXT ROUND\n\n      setTimeout(() => {\n        if (gameEnd.current) addTimerChangeColor() // MAKE SURE THERE ISN'T A NEW GAME TO MAKE THE ANIMATION\n      }, 3200)\n    }\n  }\n\n  const addButtonAnimation = () => $(`#buttonStart`).addClass(`${css.shakeAnimation}`);\n  const removeButtonAnimation = () => $(`#buttonStart`).removeClass(`${css.shakeAnimation}`);\n  const addTimerChangeColor = () => $(`#timerBox`).addClass(`${css.changeColor}`);\n  const removeTimerChangeColor = () => $(`#timerBox`).removeClass(`${css.changeColor}`);\n  const addFlowPopUp = () => continueFlowPopUp.current = true;\n  const removeFlowPopUp = () => continueFlowPopUp.current = false;\n\n  useEffect(() => { // BUTTON SHAKE ANIMATION AT VERY FIRST TIME\n    addButtonAnimation()\n  },[])\n\n  const basicOptions = () => {\n    startsIn()\n    setNewGameStarted(true) // ADD TIMER IN SCREEN\n  }\n\n  const softResetGame = () => {\n    addFlowPopUp()\n    stopTimer()\n    resetTimer()\n    rC.current = Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))\n    clickBlocked.current = true\n    actionPoints = 0;\n    gameEnd.current = false;\n    winner.current = \"\"\n    setWinnerState(\"\")\n    setUserPlaying(true);\n    removeButtonAnimation()\n    removeTimerChangeColor()\n    actionPoints = 0;\n    AIRandomGridIndex.current = Math.floor(Math.random() * 9) // BETWEEN 0 & 8\n    rC.current.forEach(e => {\n      $(`#${e.id}`)\n        .css(\"background\", \"red\")\n    })\n  }\n\n  const hardResetGame = () => {\n    addFlowPopUp()\n    stopTimer()\n    resetTimer()\n    rC.current = Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))\n    clickBlocked.current = true\n    setPoints({ \"X\": 0, \"O\": 0 });\n    actionPoints = 0;\n    gameEnd.current = false;\n    winner.current = \"\"\n    setWinnerState(\"\")\n    setUserPlaying(true);\n    removeButtonAnimation()\n    removeTimerChangeColor()\n    actionPoints = 0;\n    AIRandomGridIndex.current = Math.floor(Math.random() * 9) // BETWEEN 0 & 8\n    rC.current.forEach(e => {\n      $(`#${e.id}`)\n      .css(\"background\", \"red\")\n    })\n  }\n\n  const selectOptions = () => {\n    showCountdownRound.current = false\n    setShowCountdownRoundState(false)\n    hardResetGame();\n    removeButtonAnimation()\n    setNewGameStarted(false) // REMOVE TIMER FROM SCREEN\n    Swal.fire({\n      title: `WELCOME TO TIC-TAC-TOE !`,\n      text: 'Please, select who start first..',\n      showDenyButton: true,\n      confirmButtonText: 'LET ME START !',\n      denyButtonText: `    AI STARTS !   `,\n      confirmButtonColor: '#800080', // LEFT OPTION\n      denyButtonColor: '#008000', // RIGHT OPTION\n    })\n    .then((result) => {\n      if (result.isConfirmed) { // START USER\n        basicOptions()\n        userHasStartedThisRound.current = true\n        setShouldAIstartState(false)\n        setTimeout(() => {\n          startTimer()\n          clickBlocked.current = false\n        }, 4300) // SYNC WITH POP-UP CLOSES\n      }\n      else if (result.isDenied) { // START AI\n        basicOptions()\n        userHasStartedThisRound.current = false\n        clickBlocked.current = true\n        setShouldAIstartState(true)\n        setTimeout(() => {\n          startTimer()\n          AIAction()\n        }, 4300) // SYNC WITH POP-UP CLOSES\n      }\n      else addButtonAnimation()\n    })\n  }\n\n  const buttonNewGameHandler = () => {\n    removeFlowPopUp() // CANCEL WINNER POP-UP WHEN USER CLICK \"NEW GAME\" BUTTON\n    removeButtonAnimation()\n    if (newGameStarted) {\n      Swal.fire({\n        title: `DO YOU WANT TO START A NEW GAME ?`,\n        text: 'All points gonna be lost !..',\n        icon: 'info',\n        showDenyButton: true,\n        confirmButtonText: 'START NEW GAME !',\n        denyButtonText: `CONTINUE PLAYING !`,\n        confirmButtonColor: '#800080', // LEFT OPTION\n        denyButtonColor: '#008000', // RIGHT OPTION\n      })\n      .then((result) => {\n        if (result.isConfirmed) selectOptions() // CONFIRM NEW GAME\n        else addFlowPopUp() // ELSE CONTINUE GAME\n      })\n\n    } else selectOptions() // WHEN NO CURRENT GAME\n  }\n\n  let offset = useRef(0);\n  let paused = useRef(true);\n\n  render();\n\n  function startTimer() {\n    if (paused.current) {\n      paused.current = false;\n      offset.current -= Date.now();\n      render();\n    }\n  }\n\n  function stopTimer() {\n    if (!paused.current) {\n      paused.current = true;\n      offset.current += Date.now();\n      render()\n    }\n  }\n\n  function resetTimer() {\n    if (paused.current) {\n      offset.current = 0;\n      render();\n    } else offset.current =- Date.now();\n  }\n\n  function format(value: any, scale: any, modulo: any, padding: any) {\n    value = Math.floor(value / scale) % modulo;\n    return value.toString().padStart(padding, 0);\n  }\n\n  function render() {\n\n    var value = paused.current ? offset.current : Date.now() + offset.current;\n\n    let miliseconds = document.getElementById('timer_ms')\n    if (miliseconds !== null) miliseconds.textContent = format(value, 1, 1000, 3);\n    let seconds = document.getElementById('timer_seconds')\n    if (seconds !== null) seconds.textContent = format(value, 1000, 60, 2);\n    let minutes = document.getElementById('timer_minutes')\n    if (minutes !== null) minutes.textContent = format(value, 60000, 60, 2);\n\n    if(!paused.current) requestAnimationFrame(render);\n  }\n\n  const startsIn = () => {\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n3..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 0)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n2..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 1000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n1..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 2000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `GO !!!`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1300,\n      })\n    }, 3000)\n  }\n\n  //console.log(\"rC\", rC.current)\n\n  return (\n    <div className={`${css.background} ${com.noSelect}`}>\n      <Button\n        id={`buttonStart`}\n        className={css.button}\n        variant=\"outlined\"\n        sx={{ color: 'white', background: 'blue', '&:hover': { background: 'green' } }}\n        onClick={() => {\n          buttonNewGameHandler()\n        }}\n      >\n        NEW GAME\n      </Button>\n      <div className={css.participants}>\n        <div className={css.participant}>\n          <div className={css.pointsTitle}>Points:</div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? null : newGameStarted && userPlaying && !gameEnd.current ? `TURN ` : null }</div>\n          <div className={css.participantName}>You:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.X} </div></div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? `TURN ` : newGameStarted && !userPlaying && !gameEnd.current ? `TURN ` : null }</div>\n          <div className={css.participantName}>AI:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.O} </div></div>\n        </div>\n        <div className={css.finalWinner}>\n          {\n            gameEnd.current && winnerState === \"X\" ?\n            `WINNER: YOU !` :\n            gameEnd.current && winnerState === \"O\" ?\n            `WINNER: AI !` :\n            gameEnd.current && winnerState === \"TIED\" ?\n            `TIED GAME !` :\n            null\n          }\n        </div>\n        <div\n          style={{\n            display: newGameStarted ? 'flex' : 'none'\n          }}\n          id={`timerBox`}\n          className={css.timer}\n        >\n          <div>TIME:  </div>\n          <div id={`timer_minutes`} className={css.eachTime}>00</div>:\n          <div id={`timer_seconds`} className={css.eachTime}>00</div>\n          <div className={css.smallerMili}>:</div>\n          <div id={`timer_ms`} className={`${css.smallerMili} ${css.eachTimeMini}`}>000</div>\n        </div>\n      </div >\n      <div className={css.rowsAndColumns}>\n        {\n          rC.current.map((e, index) => {\n            return (\n              <div\n                key={index}\n                id={`${index}`}\n                onClick={(e) => {\n                  if (!clickBlocked.current) {\n                    handleSequence({ target: index })\n                  }\n                }}\n                className={css.eachBox}\n              >\n                { rC.current[index].value }\n              </div>\n            )\n          })\n        }\n        <div\n          style={{\n            display:\n              showCountdownRoundState && showCountdownRound.current ?\n              //showCountdownRoundState ?\n              //showCountdownRound.current ?\n              'flex' :\n              'none'\n          }}\n          className={css.nextGameIn}\n        >\n          {\n            countdownRound === 0 ?\n            <div className={css.nextGameInInner}>Go !!!</div> :\n            <div className={css.nextGameInInner}>\n              <div className={css.nextGameText}> Next round in</div>\n              <div className={css.nextGameNumber}>{countdownRound} </div>\n            </div>\n          }\n        </div>\n      </div>\n      <div className={css.scoreTable}>\n        <div className={css.scoreTableTitlesContainer}>\n          <div className={css.scoreTableNumeral}>#</div>\n          <div className={css.scoreTableScore}>SCORE</div>\n          <div className={css.scoreTableYou}>YOU</div>\n          <div className={css.scoreTableAI}>AI</div>\n          <div className={css.scoreTableScore}>SCORE</div>\n          <div className={css.scoreTableTime}>TIME</div>\n        </div>\n        \n        {\n          score.current.map((e,i)=> {\n            return (\n              <div key={i} className={css.scoreTableEachScore}>\n                <div className={css.scoreTableNumeral}>{e.id}</div>\n                {/* <div className={css.scoreTableScore}>{e.scoreX}</div> */}\n                <div className={css.scoreTableScore}>{ e.scoreX === 0 ? \"➖\" : e.scoreX }</div>\n                <div className={css.scoreTableYou}>{e.X}</div>\n                <div className={css.scoreTableAI}>{e.O}</div>\n                <div className={css.scoreTableScore}>{ e.scoreO === 0 ? \"➖\" : e.scoreO }</div>\n                <div className={css.scoreTableTime}>{e.time}</div>\n              </div>\n            )\n          })\n\n        }\n          \n       \n      </div>\n      \n    </div>\n  );\n}\n\nexport default Main;","import { useState, useEffect, useRef } from \"react\";\nimport css from './App.module.css';\nimport './commons/globalSweetAlert2.css';\nimport { useSelector } from 'react-redux';\nimport { Route, Routes, useMatch, useLocation } from \"react-router-dom\";\nimport $ from 'jquery';\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n\n  return (\n   <div className={css.background}>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<>\n              <Main />\n              </>\n            }\n        />        \n      </Routes>\n      </div>\n  )\n}\n\nexport default App;","// import {\n//   recipesI, serverStatusI, navBarFiltersI, settingsFiltersI\n// } from '../interfaces/interfaces';\n\ninterface initialStateI {\n  serverStatus?: string,\n}\n\nconst initialState: initialStateI = {\n  serverStatus: 'asd',\n}\n\nconst reducer = (state = initialState, action: {type: string; payload: any}) => {\n  switch (action.type) {\n    case 'SET_INDEX_CHOOSEN':\n      return {\n        ...state,\n        indexChoosen: action.payload\n      };    \n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n","import { legacy_createStore as createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter basename=\"/tictactoe\">\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"MainCSS_background__1Q1tO\",\"nextGameIn\":\"MainCSS_nextGameIn__3XPK8\",\"nextGameInInner\":\"MainCSS_nextGameInInner__3Te5s\",\"nextGameText\":\"MainCSS_nextGameText__2P-X_\",\"nextGameNumber\":\"MainCSS_nextGameNumber__24lJN\",\"button\":\"MainCSS_button__2c_QR\",\"noAnimation\":\"MainCSS_noAnimation__1uiwW\",\"onone\":\"MainCSS_onone__3mZ_2\",\"shakeAnimation\":\"MainCSS_shakeAnimation__fG_-C\",\"shake\":\"MainCSS_shake__SfRao\",\"changeColor\":\"MainCSS_changeColor__2-mW8\",\"changeCol\":\"MainCSS_changeCol__24VVs\",\"timer\":\"MainCSS_timer__3HWC8\",\"eachTime\":\"MainCSS_eachTime__3bWTB\",\"eachTimeMini\":\"MainCSS_eachTimeMini__2eU1d\",\"smallerMili\":\"MainCSS_smallerMili__3jRfz\",\"participants\":\"MainCSS_participants__2fMaH\",\"participant\":\"MainCSS_participant__3Hqsa\",\"turn\":\"MainCSS_turn__3rc7J\",\"blink\":\"MainCSS_blink__3XQfa\",\"participantName\":\"MainCSS_participantName__Nj8p0\",\"pointsTitle\":\"MainCSS_pointsTitle__1Lx4I\",\"points\":\"MainCSS_points__2hJpt\",\"innerPoints\":\"MainCSS_innerPoints__21ZiP\",\"finalWinner\":\"MainCSS_finalWinner__2pYW0\",\"rowsAndColumns\":\"MainCSS_rowsAndColumns__2GrZo\",\"crossCircle\":\"MainCSS_crossCircle__1T8V_\",\"cross\":\"MainCSS_cross__3wO_9\",\"circle\":\"MainCSS_circle__29slD\",\"eachRow\":\"MainCSS_eachRow__3aF6L\",\"eachBox\":\"MainCSS_eachBox__3qaSx\",\"scoreTable\":\"MainCSS_scoreTable__Nnt7l\",\"scoreTableNumeral\":\"MainCSS_scoreTableNumeral__2GDSz\",\"scoreTableYou\":\"MainCSS_scoreTableYou__WDIYu\",\"scoreTableAI\":\"MainCSS_scoreTableAI__2OXOv\",\"scoreTableScore\":\"MainCSS_scoreTableScore__HosE9\",\"scoreTableTime\":\"MainCSS_scoreTableTime__2Q-aB\",\"scoreTableTitlesContainer\":\"MainCSS_scoreTableTitlesContainer__F80md\",\"scoreTableEachScore\":\"MainCSS_scoreTableEachScore__3GDxX\"};"],"sourceRoot":""}