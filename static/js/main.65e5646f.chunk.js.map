{"version":3,"sources":["App.module.css","commons/commonsCSS.module.css","components/Main/Main.tsx","App.tsx","reducers/index.ts","store/store.ts","index.tsx","components/Main/MainCSS.module.css"],"names":["module","exports","Main","rowsAndColumns","useRef","Array","from","length","e","i","id","value","clickBlocked","validClick","gridBlocked","points","setPoints","useState","gameEnd","gameEndState","setGameEndState","winner","winnerState","setWinnerState","userTurn","setUserTurn","shouldAIstart","shouldAIstartState","setShouldAIstartState","newGameStarted","setNewGameStarted","newGameStartedRecently","AIRandomGridIndex","Math","floor","random","AIAction","async","setTimeout","current","filter","success","console","log","checkWinner","then","handleSequence","target","_ref","undefined","userAction","highlighter","array","letter","_ref2","actionPoints","$","concat","css","copyPoints","forEach","slice","every","index","stopTimer","Swal","fire","title","text","icon","showConfirmButton","showDenyButton","showCancelButton","timer","addClass","changeColor","resetGame","paused","offset","render","Date","now","removeClass","shakeAnimation","selectOptions","confirmButtonText","denyButtonText","confirmButtonColor","denyButtonColor","result","isConfirmed","startsIn","startTimer","isDenied","format","scale","modulo","padding","toString","padStart","miliseconds","document","getElementById","textContent","seconds","minutes","requestAnimationFrame","allowOutsideClick","allowEscapeKey","_jsxs","className","background","com","noSelect","children","_jsx","Button","button","variant","sx","color","onClick","participants","participant","pointsTitle","turn","participantName","innerPoints","X","O","finalWinner","style","display","eachTime","smallerMili","eachTimeMini","map","eachBox","App","Routes","Route","path","element","_Fragment","initialState","serverStatus","reducer","state","arguments","action","type","indexChoosen","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","React","StrictMode","Provider","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.65e5646f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__3CDGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noSelect\":\"commonsCSS_noSelect__3G6Ou\",\"noDeco\":\"commonsCSS_noDeco__1atZN\"};","import css from './MainCSS.module.css';\nimport com from '../../commons/commonsCSS.module.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from '@mui/material/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport $ from 'jquery';\nimport { pointsI, highlighterI, handleSequenceI } from '../../interfaces/interfaces';\n\nconst Main = () => {\n\n  //let [ rowsAndColumns, setRowsAndColumns ] = useState<any[]>(Array.from({length: 9}, (e,i) => ({ id: i, value: '' })))\n\n  let rowsAndColumns = useRef<any[]>(Array.from({length: 9}, (e,i) => ({ id: i, value: '' })))\n  let clickBlocked = useRef(true)\n  let validClick = useRef(false)\n  let gridBlocked = useRef(true)\n  const [ points, setPoints ] = useState<pointsI>({ \"X\": 0, \"O\": 0 })\n  let gameEnd = useRef(false)\n  const [ gameEndState, setGameEndState ] = useState(false)\n  let winner = useRef(\"\")\n  const [ winnerState, setWinnerState ] = useState(\"\")\n  const [ userTurn, setUserTurn ] = useState(true)\n  let shouldAIstart = useRef(false)\n  const [ shouldAIstartState, setShouldAIstartState ] = useState(false)\n  //const [ startUser, setStartUser ] = useState(false)\n  const [ newGameStarted, setNewGameStarted ] = useState(false) \n  //const [ newGameStarted, setNewGameStarted ] = useState(true) // START IMMEDIATELY\n  let newGameStartedRecently = useRef(false)\n  let AIRandomGridIndex = useRef(Math.floor(Math.random() * 9)) // BETWEEN 0 & 8\n\n  const AIAction = async () => {\n\n    let randomTimes = [ 700, 800, 900, 1000, 1100 ]\n      setTimeout(() => {\n        if (rowsAndColumns.current.filter((e: any) => e.value === '').length >= 1) {\n          let success = false\n          do {\n            AIRandomGridIndex.current = Math.floor(Math.random() * 9)\n            if (rowsAndColumns.current[AIRandomGridIndex.current].value === \"\") {\n              rowsAndColumns.current[AIRandomGridIndex.current].value = \"O\"\n              console.log(\"delay\", AIRandomGridIndex.current)\n              success = true\n              shouldAIstart.current = false\n              setShouldAIstartState(false)\n              setUserTurn(true)\n              console.log(\"while 1ro\")\n            }\n          } while (success === false)\n        }\n        console.log(\"while 2do\")\n        checkWinner()\n        .then(() => {\n          console.log(\"while 3ro\")\n          if (!gameEnd.current) {\n            clickBlocked.current = false\n          }\n        })\n      }, randomTimes[Math.floor(Math.random() * 5)])\n  }\n\n  const userAction = async ( target: any) => {\n    if (target !== undefined && rowsAndColumns.current[target].value === \"\") {\n      console.log(\"while se ejecuto func de user, valid click\")\n      rowsAndColumns.current[target].value = \"X\"\n      setUserTurn(false)\n      validClick.current = true\n      clickBlocked.current = true\n    } else {\n      validClick.current = false\n    }\n  }\n\n  const handleSequence = async ({ target }: handleSequenceI) => {\n    shouldAIstart.current = false\n    userAction(target)\n    .then(() => {\n      if (validClick.current) {\n        checkWinner()\n      }\n      \n    })\n    .then(() => {\n      console.log(\"se ejecuta then de AIAction\")\n      if (!gameEnd.current && validClick.current) {\n          AIAction()\n      }\n    })\n  }\n\n  const highlighter = async ({ array, letter }: highlighterI) => { // GAME END WITH A WINNER\n    actionPoints = actionPoints + 100\n    clickBlocked.current = true\n    gameEnd.current = true\n    setGameEndState(true)\n    setTimeout(() => {\n      $(`#${array[0].id}`)\n        .css(\"background\", \"yellow\")\n    }, 300)\n    setTimeout(() => {\n      $(`#${array[1].id}`)\n        .css(\"background\", \"yellow\")\n    }, 600)\n    setTimeout(() => {\n      $(`#${array[2].id}`)\n        .css(\"background\", \"yellow\")\n    }, 900)\n\n    setTimeout(() => {\n      let copyPoints: pointsI = {...points}\n      copyPoints[letter] = copyPoints[letter] + actionPoints\n      setPoints(copyPoints)\n      winner.current = `${letter}`\n      setTimeout(() => {\n        setWinnerState(`${letter}`) // APPEARS WHEN POP-UP\n      }, 300)\n    }, 1200)\n  }\n\n  let actionPoints: number = 0\n\n  const checkWinner = async () => {\n    console.log(\"arr inner\", rowsAndColumns.current)\n\n    let rowTargets = [0,3,6]\n    let columnsTargets = [0,1,2]\n    //let diagonalTargets = [0,2]\n    rowTargets.forEach(e => { // ROW\n      if (rowsAndColumns.current.slice(e,e+3).every(e => e.value === 'X')) {\n        console.log(\"winner here 1\")\n        highlighter({ array: rowsAndColumns.current.slice(e,e+3), letter: \"X\" })\n        \n      }\n      if (rowsAndColumns.current.slice(e,e+3).every(e => e.value === 'O')) {\n        console.log(\"winner here 2\")\n        highlighter({ array: rowsAndColumns.current.slice(e,e+3), letter: \"O\" })\n        \n      }\n    })\n\n    columnsTargets.forEach((e, index) => { // COLUMN\n      if ([rowsAndColumns.current[e],rowsAndColumns.current[e+3],rowsAndColumns.current[e+6]].every(e => e.value === 'X')) {\n        console.log(\"winner here 3\")\n        highlighter({ array: [rowsAndColumns.current[e],rowsAndColumns.current[e+3],rowsAndColumns.current[e+6]], letter: \"X\" })\n        \n      }\n      if ([rowsAndColumns.current[e],rowsAndColumns.current[e+3],rowsAndColumns.current[e+6]].every(e => e.value === 'O')) {\n        console.log(\"winner here 4\")\n        highlighter({ array: [rowsAndColumns.current[e],rowsAndColumns.current[e+3],rowsAndColumns.current[e+6]], letter: \"O\" })\n        \n      }\n    })\n\n    if ([rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]].every(e => e.value === 'X')) { // DIAGONAL\n      console.log(\"winner here 5\")\n      highlighter({ array: [rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]], letter: \"X\" })\n      \n    }\n    if ([rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]].every(e => e.value === 'O')) {\n      console.log(\"winner here 6\")\n      highlighter({ array: [rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]], letter: \"O\" })\n      \n    }\n    if ([rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]].every(e => e.value === 'X')) {\n      console.log(\"winner here 7\")\n      highlighter({ array: [rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]], letter: \"X\" })\n      \n    }\n    if ([rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]].every(e => e.value === 'O')) {\n      console.log(\"winner here 8\")\n      highlighter({ array: [rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]], letter: \"O\" })\n      \n    }\n\n    if (rowsAndColumns.current.filter(e => e.value === '').length === 0) gameEnd.current = true // STOP GAME WHEN NO MORE STEPS AVAILABLE\n\n    //if (rowsAndColumns.current.filter(e => e.value === '').length === 0 || gameEnd.current) {\n    if (gameEnd.current) {\n      setGameEndState(true)\n      stopTimer()\n\n      setTimeout(() => {\n        Swal.fire({\n          title:\n            winner.current === \"X\" ?\n            `YOU WIN !` :\n            winner.current === \"O\" ?\n            `AI WIN !` :\n            `TIED GAME`,\n          text:\n            actionPoints === 100 ?\n            `+100 Points` :\n            actionPoints === 200 ?\n            `+200 Points !! Supperrrb !!!` :\n            `no winner, no points.`,\n          icon:\n            winner.current === \"\" ?\n            'info' :\n            'success',\n          showConfirmButton: false,\n          showDenyButton: false,\n          showCancelButton: false,\n          timer: 2000,\n        })\n\n        setTimeout(() => {\n          if (!(winner.current !== \"\" && winner.current === \"X\") && !(winner.current !== \"\" && winner.current === \"O\")) {\n            setWinnerState(\"TIED\")\n            clickBlocked.current = true\n          }\n        }, 1200)\n\n      }, 1200)\n\n      setTimeout(() => {\n        //if (gameEnd.current) {\n          $(`#timerBox`)\n            .addClass(`${css.changeColor}`)\n        //}\n          \n\n      }, 3200)\n\n    } \n    // else {\n    //   clickBlocked.current = false\n    // }\n  }\n\n  function resetGame() {\n\n    stopTimer()\n    resetTimer()\n    //let qq = Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))\n    // setRowsAndColumns([\n    //   { id: 0, value: '' }, { id: 1, value: '' }, { id: 2, value: '' },\n    //   { id: 3, value: '' }, { id: 4, value: '' }, { id: 5, value: '' },\n    //   { id: 6, value: '' }, { id: 7, value: '' }, { id: 8, value: '' }\n    // ])\n    //setRowsAndColumns(Array.from({length: 9}, (e,i) => ({ id: i, value: '' })))\n    rowsAndColumns.current = Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))\n    clickBlocked.current = true\n    setPoints({ \"X\": 0, \"O\": 0 });\n    actionPoints = 0;\n    gameEnd.current = false;\n    setGameEndState(false)\n    winner.current = \"\"\n    setWinnerState(\"\")\n    setUserTurn(true)\n    //shouldAIstart.current = false;\n    \n\n    $(`#buttonStart`)\n      .removeClass(`${css.shakeAnimation}`);\n    $(`#timerBox`)\n      .removeClass(`${css.changeColor}`);\n    //setNewGameStarted(false)\n    \n    \n    \n    \n    \n    \n    actionPoints = 0;\n    AIRandomGridIndex.current = Math.floor(Math.random() * 9) // BETWEEN 0 & 8\n    rowsAndColumns.current.forEach(e => {\n      $(`#${e.id}`)\n      .css(\"background\", \"red\")\n    })\n  }\n\n  const selectOptions = () => {\n    $(`#buttonStart`)\n      .removeClass(`${css.shakeAnimation}`);\n\n    Swal.fire({\n      title: `WELCOME TO TIC-TAC-TOE !`,\n      text: 'Please, select who start first..',\n      //icon: 'info',\n      showDenyButton: true,\n      confirmButtonText: 'LET ME START !',\n      denyButtonText: `    AI STARTS !   `,\n      confirmButtonColor: '#800080', // LEFT OPTION\n      denyButtonColor: '#008000', // RIGHT OPTION\n    })\n    .then((result) => {\n      //setRowsAndColumns(Array.from({length: 9}, (e,i) => ({ id: i, value: '' })))\n      //resetGame()\n      if (result.isConfirmed) { // START USER\n        //resetGame()\n        startsIn()\n        //setRowsAndColumns(Array.from({length: 9}, (e,i) => ({ id: i, value: '' })))\n        //console.log(\"CONFIRMED\")\n        setNewGameStarted(true)\n        setShouldAIstartState(false)\n        shouldAIstart.current = false\n        $(`#buttonStart`)\n          .removeClass(`${css.shakeAnimation}`);\n        setTimeout(() => {\n          startTimer()\n          clickBlocked.current = false\n          gridBlocked.current = false\n        }, 4300) // SYNC WITH POP-UP CLOSES\n      }\n      else if (result.isDenied) { // START AI\n        startsIn()\n        \n        //console.log(\"REJECTED\")\n        setNewGameStarted(true)\n        shouldAIstart.current = true\n        clickBlocked.current = true\n        setShouldAIstartState(true)\n        $(`#buttonStart`)\n          .removeClass(`${css.shakeAnimation}`);\n        setTimeout(() => {\n          startTimer()\n          AIAction()\n        }, 4300) // SYNC WITH POP-UP CLOSES\n      }\n      else {\n        //console.log(\"OTHER\")\n        $(`#buttonStart`)\n          .addClass(`${css.shakeAnimation}`)\n      }\n    })\n\n  }\n\n  const buttonNewGameHandler = () => {\n\n    if (newGameStarted) {\n      Swal.fire({\n        title: `DO YOU WANT TO START A NEW GAME ?`,\n        text: 'All points gonna be lost !..',\n        icon: 'info',\n        showDenyButton: true,\n        confirmButtonText: 'START NEW GAME !',\n        denyButtonText: `CONTINUE PLAYING !`,\n        confirmButtonColor: '#800080', // LEFT OPTION\n        denyButtonColor: '#008000', // RIGHT OPTION\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          resetGame()\n          selectOptions()\n        }\n      })\n\n    } else {\n      resetGame()\n      selectOptions()\n    }\n  }\n\n  $(function() {\n    if (!newGameStarted && !newGameStartedRecently.current) {\n      $(`#buttonStart`)\n        .addClass(`${css.shakeAnimation}`)\n    } else {\n      $(`#buttonStart`)\n        .removeClass(`${css.shakeAnimation}`);\n    }\n  })\n\n  let offset = useRef(0);\n  let paused = useRef(true);\n\n  render();\n    \n  function startTimer() {\n    if (paused.current) {\n      paused.current = false;\n      offset.current -= Date.now();\n      render();\n    }\n  }\n\n  function stopTimer() {\n    //console.log(\"PAUSED VALUE\", paused.current)\n    if (!paused.current) {\n      paused.current = true;\n      offset.current += Date.now();\n      render()\n    }\n  }\n\n  function resetTimer() {\n    if (paused.current) {\n      offset.current = 0;\n      render();\n    } else offset.current =- Date.now();\n  }\n\n  function format(value: any, scale: any, modulo: any, padding: any) {\n    value = Math.floor(value / scale) % modulo;\n    return value.toString().padStart(padding, 0);\n  }\n\n  function render() {\n\n    var value = paused.current ? offset.current : Date.now() + offset.current;\n\n    let miliseconds = document.getElementById('s_ms')\n    if (miliseconds !== null) miliseconds.textContent = format(value, 1, 1000, 3);\n    let seconds = document.getElementById('s_seconds')\n    if (seconds !== null) seconds.textContent = format(value, 1000, 60, 2);\n    let minutes = document.getElementById('s_minutes')\n    if (minutes !== null) minutes.textContent = format(value, 60000, 60, 2);\n\n    if(!paused.current) requestAnimationFrame(render);\n  }\n\n  const startsIn = () => {\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n3..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 0)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n2..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 1000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n1..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 2000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `GO !!!`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1300,\n      })\n    }, 3000)\n  }\n\n  //console.log(\"rowsAndColumns\", rowsAndColumns.current)\n  console.log(\"rowsAndColumns\", rowsAndColumns.current)\n  //console.log(JSON.stringify(rowsAndColumns.current, null, 4))\n\n  return (\n    <div className={`${css.background} ${com.noSelect}`}>\n      <Button\n        id={`buttonStart`}\n        className={css.button}\n        variant=\"outlined\"\n        sx={{ color: 'white', background: 'blue', '&:hover': { background: 'green' } }}\n        //onClick={() => resetGame() }\n        onClick={() => { \n          //if (!gridBlocked.current) {\n            buttonNewGameHandler()\n          //}\n            \n        } }\n      >\n        NEW GAME\n      </Button>\n      <div className={css.participants}>\n        <div className={css.participant}>\n          <div className={css.pointsTitle}>Points:</div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? null : newGameStarted && userTurn && !gameEndState ? `TURN ` : null }</div>\n          <div className={css.participantName}>You:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.X} </div></div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? `TURN ` : newGameStarted && !userTurn && !gameEndState ? `TURN ` : null }</div>\n          <div className={css.participantName}>AI:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.O} </div></div>\n        </div>\n        <div className={css.finalWinner}>\n          {\n            winner.current !== \"\" && winnerState === \"X\" ?\n            `WINNER: YOU !` :\n            winner.current !== \"\" && winnerState === \"O\" ?\n            `WINNER: AI !` :\n            winner.current === \"\" && winnerState === \"TIED\" ?\n            `TIED GAME !` :\n            null\n          }\n        </div>\n        <div\n          style={{\n            display: newGameStarted ? 'flex' : 'none'\n          }}\n          id={`timerBox`}\n          className={css.timer}\n        >\n          <div>TIME:  </div>\n          <div id={`s_minutes`} className={css.eachTime}>00</div>:\n          <div id={`s_seconds`} className={css.eachTime}>00</div>\n          <div className={css.smallerMili}>:</div>\n          <div id={`s_ms`} className={`${css.smallerMili} ${css.eachTimeMini}`}>000</div>\n        </div>\n      </div >\n\n      \n\n      <div id={`rowsAndColumns`} className={css.rowsAndColumns}>\n        {\n          rowsAndColumns.current.map((e, index) => {\n            return (\n              <div\n                key={index}\n                id={`${index}`}\n                onClick={(e) => {\n                  if (!clickBlocked.current) {\n                    handleSequence({ target: index })\n                  }\n\n                }}\n                className={css.eachBox}\n              >\n                { rowsAndColumns.current[index].value }\n              </div>\n            )\n          })\n        }\n      </div>\n\n      <Button\n        id={`buttonStart`}\n        className={css.button}\n        variant=\"outlined\"\n        //onClick={() => { console.log(\"clicked\") } }\n      >\n        TEST\n      </Button>\n\n\n    </div>\n  );\n}\n\nexport default Main;","import { useState, useEffect, useRef } from \"react\";\nimport css from './App.module.css';\nimport './commons/globalSweetAlert2.css';\nimport { useSelector } from 'react-redux';\nimport { Route, Routes, useMatch, useLocation } from \"react-router-dom\";\nimport $ from 'jquery';\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n\n  return (\n   <div className={css.background}>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<>\n              <Main />\n              </>\n            }\n        />        \n      </Routes>\n      </div>\n  )\n}\n\nexport default App;","// import {\n//   recipesI, serverStatusI, navBarFiltersI, settingsFiltersI\n// } from '../interfaces/interfaces';\n\ninterface initialStateI {\n  serverStatus?: string,\n}\n\nconst initialState: initialStateI = {\n  serverStatus: 'asd',\n}\n\nconst reducer = (state = initialState, action: {type: string; payload: any}) => {\n  switch (action.type) {\n    case 'SET_INDEX_CHOOSEN':\n      return {\n        ...state,\n        indexChoosen: action.payload\n      };    \n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n","import { legacy_createStore as createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter basename=\"/tictactoe\">\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"MainCSS_background__1Q1tO\",\"button\":\"MainCSS_button__2c_QR\",\"noAnimation\":\"MainCSS_noAnimation__1uiwW\",\"onone\":\"MainCSS_onone__3mZ_2\",\"shakeAnimation\":\"MainCSS_shakeAnimation__fG_-C\",\"shake\":\"MainCSS_shake__SfRao\",\"changeColor\":\"MainCSS_changeColor__2-mW8\",\"changeCol\":\"MainCSS_changeCol__24VVs\",\"timer\":\"MainCSS_timer__3HWC8\",\"eachTime\":\"MainCSS_eachTime__3bWTB\",\"eachTimeMini\":\"MainCSS_eachTimeMini__2eU1d\",\"smallerMili\":\"MainCSS_smallerMili__3jRfz\",\"participants\":\"MainCSS_participants__2fMaH\",\"participant\":\"MainCSS_participant__3Hqsa\",\"turn\":\"MainCSS_turn__3rc7J\",\"blink\":\"MainCSS_blink__3XQfa\",\"participantName\":\"MainCSS_participantName__Nj8p0\",\"pointsTitle\":\"MainCSS_pointsTitle__1Lx4I\",\"points\":\"MainCSS_points__2hJpt\",\"innerPoints\":\"MainCSS_innerPoints__21ZiP\",\"finalWinner\":\"MainCSS_finalWinner__2pYW0\",\"rowsAndColumns\":\"MainCSS_rowsAndColumns__2GrZo\",\"crossCircle\":\"MainCSS_crossCircle__1T8V_\",\"cross\":\"MainCSS_cross__3wO_9\",\"circle\":\"MainCSS_circle__29slD\",\"eachRow\":\"MainCSS_eachRow__3aF6L\",\"eachBox\":\"MainCSS_eachBox__3qaSx\"};"],"sourceRoot":""}