{"version":3,"sources":["App.module.css","commons/commonsCSS.module.css","components/Main/Main.tsx","App.tsx","reducers/index.ts","store/store.ts","index.tsx","components/Main/MainCSS.module.css"],"names":["module","exports","Main","rowsAndColumns","useRef","Array","from","length","e","i","id","value","clickBlocked","validClick","continueFlowPopUp","points","setPoints","useState","gameEnd","winner","winnerState","setWinnerState","userTurn","setUserTurn","shouldAIstart","shouldAIstartState","setShouldAIstartState","newGameStarted","setNewGameStarted","AIRandomGridIndex","Math","floor","random","AIAction","async","setTimeout","current","filter","success","checkWinner","then","handleSequence","target","_ref","undefined","console","log","userAction","highlighter","array","letter","_ref2","actionPoints","$","concat","css","copyPoints","forEach","slice","every","index","stopTimer","Swal","fire","title","text","icon","showConfirmButton","showDenyButton","showCancelButton","timer","addTimerChangeColor","addButtonAnimation","addClass","shakeAnimation","removeButtonAnimation","removeClass","changeColor","useEffect","basicOptions","startsIn","resetGame","paused","offset","render","Date","now","selectOptions","confirmButtonText","denyButtonText","confirmButtonColor","denyButtonColor","result","isConfirmed","startTimer","isDenied","format","scale","modulo","padding","toString","padStart","miliseconds","document","getElementById","textContent","seconds","minutes","requestAnimationFrame","allowOutsideClick","allowEscapeKey","_jsxs","className","background","com","noSelect","children","_jsx","Button","button","variant","sx","color","onClick","participants","participant","pointsTitle","turn","participantName","innerPoints","X","O","finalWinner","style","display","eachTime","smallerMili","eachTimeMini","map","eachBox","App","Routes","Route","path","element","_Fragment","initialState","serverStatus","reducer","state","arguments","action","type","indexChoosen","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","React","StrictMode","Provider","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.1d3082e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__3CDGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noSelect\":\"commonsCSS_noSelect__3G6Ou\",\"noDeco\":\"commonsCSS_noDeco__1atZN\"};","import css from './MainCSS.module.css';\nimport com from '../../commons/commonsCSS.module.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { Button } from '@mui/material/';\nimport Swal from 'sweetalert2';\nimport $ from 'jquery';\nimport { pointsI, highlighterI, handleSequenceI } from '../../interfaces/interfaces';\n\nconst Main = () => {\n\n  let rowsAndColumns = useRef<any[]>(Array.from({length: 9}, (e,i) => ({ id: i, value: '' })))\n  let clickBlocked = useRef(true)\n  let validClick = useRef(false)\n  let continueFlowPopUp = useRef(true)\n  const [ points, setPoints ] = useState<pointsI>({ \"X\": 0, \"O\": 0 })\n  let gameEnd = useRef(false)\n  let winner = useRef(\"\")\n  const [ winnerState, setWinnerState ] = useState(\"\") // ONLY FOR GAME UI DISPLAY REASONS..\n  const [ userTurn, setUserTurn ] = useState(true)\n  let shouldAIstart = useRef(false)\n  const [ shouldAIstartState, setShouldAIstartState ] = useState(false) // ONLY FOR GAME UI DISPLAY REASONS..\n  const [ newGameStarted, setNewGameStarted ] = useState(false)\n  let AIRandomGridIndex = useRef(Math.floor(Math.random() * 9)) // BETWEEN 0 & 8\n\n  const AIAction = async () => {\n\n    let randomTimes = [ 700, 800, 900, 1000, 1100 ]\n    setTimeout(() => {\n      if (rowsAndColumns.current.filter((e: any) => e.value === '').length >= 1) {\n        let success = false\n        do {\n          AIRandomGridIndex.current = Math.floor(Math.random() * 9)\n          if (rowsAndColumns.current[AIRandomGridIndex.current].value === \"\") {\n            rowsAndColumns.current[AIRandomGridIndex.current].value = \"O\"\n            success = true\n            shouldAIstart.current = false\n            setShouldAIstartState(false)\n            setUserTurn(true)\n          }\n        } while (success === false)\n      }\n      checkWinner()\n      .then(() => { if (!gameEnd.current) clickBlocked.current = false })\n    }, randomTimes[Math.floor(Math.random() * 5)])\n  }\n\n  const userAction = async ( target: any) => {\n    if (target !== undefined && rowsAndColumns.current[target].value === \"\") {\n      console.log(\"while se ejecuto func de user, valid click\")\n      rowsAndColumns.current[target].value = \"X\"\n      setUserTurn(false)\n      validClick.current = true\n      clickBlocked.current = true\n    } else validClick.current = false // CLICK IS NOT VALID\n  }\n\n  const handleSequence = async ({ target }: handleSequenceI) => {\n    shouldAIstart.current = false\n    userAction(target)\n    .then(() => { if (validClick.current) checkWinner() })\n    .then(() => { if (!gameEnd.current && validClick.current) AIAction() })\n  }\n\n  const highlighter = async ({ array, letter }: highlighterI) => { // GAME END WITH A WINNER\n    actionPoints = actionPoints + 100\n    clickBlocked.current = true\n    gameEnd.current = true\n    setTimeout(() => {\n      $(`#${array[0].id}`)\n        .css(\"background\", \"yellow\")\n    }, 300)\n    setTimeout(() => {\n      $(`#${array[1].id}`)\n        .css(\"background\", \"yellow\")\n    }, 600)\n    setTimeout(() => {\n      $(`#${array[2].id}`)\n        .css(\"background\", \"yellow\")\n    }, 900)\n\n    setTimeout(() => {\n      let copyPoints: pointsI = {...points}\n      copyPoints[letter] = copyPoints[letter] + actionPoints\n      setPoints(copyPoints)\n      winner.current = `${letter}`\n      setTimeout(() => {\n        setWinnerState(`${letter}`) // SYNC WITH POP-UP\n      }, 300)\n    }, 1200)\n  }\n\n  let actionPoints: number = 0\n\n  const checkWinner = async () => {\n    let rowTargets = [0,3,6]\n    let columnsTargets = [0,1,2]\n    //let diagonalTargets = [0,2]\n    rowTargets.forEach(e => { // ROW\n      if (rowsAndColumns.current.slice(e, e + 3).every(e => e.value === 'X')) highlighter({ array: rowsAndColumns.current.slice(e, e + 3), letter: \"X\" })\n      if (rowsAndColumns.current.slice(e, e + 3).every(e => e.value === 'O')) highlighter({ array: rowsAndColumns.current.slice(e, e + 3), letter: \"O\" })\n    })\n\n    columnsTargets.forEach((e, index) => { // COLUMN\n      if ([rowsAndColumns.current[e],rowsAndColumns.current[e + 3],rowsAndColumns.current[e + 6]].every(e => e.value === 'X')) highlighter({ array: [rowsAndColumns.current[e],rowsAndColumns.current[e + 3],rowsAndColumns.current[e + 6]], letter: \"X\" })\n      if ([rowsAndColumns.current[e],rowsAndColumns.current[e + 3],rowsAndColumns.current[e + 6]].every(e => e.value === 'O')) highlighter({ array: [rowsAndColumns.current[e],rowsAndColumns.current[e + 3],rowsAndColumns.current[e + 6]], letter: \"O\" })\n    })\n\n    // DIAGONAL\n    if ([rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]].every(e => e.value === 'X')) highlighter({ array: [rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]], letter: \"X\" })\n    if ([rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]].every(e => e.value === 'O')) highlighter({ array: [rowsAndColumns.current[0],rowsAndColumns.current[4],rowsAndColumns.current[8]], letter: \"O\" })\n    if ([rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]].every(e => e.value === 'X')) highlighter({ array: [rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]], letter: \"X\" })\n    if ([rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]].every(e => e.value === 'O')) highlighter({ array: [rowsAndColumns.current[2],rowsAndColumns.current[4],rowsAndColumns.current[6]], letter: \"O\" })\n\n    if (rowsAndColumns.current.filter(e => e.value === '').length === 0) gameEnd.current = true // STOP GAME WHEN NO MORE STEPS AVAILABLE\n\n    if (gameEnd.current) {\n      stopTimer()\n      setTimeout(() => {\n        if (continueFlowPopUp.current) {\n          Swal.fire({\n            title:\n              winner.current === \"X\" ?\n              `YOU WIN !` :\n              winner.current === \"O\" ?\n              `AI WIN !` :\n              `TIED GAME`,\n            text:\n              actionPoints === 100 ?\n              `+100 Points` :\n              actionPoints === 200 ?\n              `+200 Points !! Supperrrb !!!` :\n              `no winner, no points.`,\n            icon:\n              winner.current === \"\" ?\n              'info' :\n              'success',\n            showConfirmButton: false,\n            showDenyButton: false,\n            showCancelButton: false,\n            timer: 2000,\n          })\n          setTimeout(() => {\n            if (winner.current === \"\") {\n              setWinnerState(\"TIED\") // SYNC WITH POP-UP\n              clickBlocked.current = true\n            }\n          }, 1200)\n        }\n      }, 1200)\n\n      setTimeout(() => {\n        if (gameEnd.current) addTimerChangeColor() // MAKE SURE THERE ISN'T A NEW GAME TO MAKE THE ANIMATION\n      }, 3200)\n    }\n  }\n\n  const addButtonAnimation = () => $(`#buttonStart`).addClass(`${css.shakeAnimation}`);\n  const removeButtonAnimation = () => $(`#buttonStart`).removeClass(`${css.shakeAnimation}`);\n  const addTimerChangeColor = () => $(`#timerBox`).addClass(`${css.changeColor}`);\n  const removeTimerChangeColor = () => $(`#timerBox`).removeClass(`${css.changeColor}`);\n\n  useEffect(() => { // BUTTON SHAKE ANIMATION AT VERY FIRST TIME\n    addButtonAnimation()\n  },[])\n\n  const basicOptions = () => {\n    startsIn()\n    setNewGameStarted(true) // ADD TIMER IN SCREEN\n  }\n\n  const resetGame = () => {\n    continueFlowPopUp.current = true\n    stopTimer()\n    resetTimer()\n    rowsAndColumns.current = Array.from({length: 9}, (e,i) => ({ id: i, value: '' }))\n    clickBlocked.current = true\n    setPoints({ \"X\": 0, \"O\": 0 });\n    actionPoints = 0;\n    gameEnd.current = false;\n    winner.current = \"\"\n    setWinnerState(\"\")\n    setUserTurn(true);\n    removeButtonAnimation()\n    removeTimerChangeColor()\n    actionPoints = 0;\n    AIRandomGridIndex.current = Math.floor(Math.random() * 9) // BETWEEN 0 & 8\n    rowsAndColumns.current.forEach(e => {\n      $(`#${e.id}`)\n      .css(\"background\", \"red\")\n    })\n  }\n\n  const selectOptions = () => {\n    resetGame();\n    removeButtonAnimation()\n    setNewGameStarted(false) // REMOVE TIMER FROM SCREEN\n    Swal.fire({\n      title: `WELCOME TO TIC-TAC-TOE !`,\n      text: 'Please, select who start first..',\n      showDenyButton: true,\n      confirmButtonText: 'LET ME START !',\n      denyButtonText: `    AI STARTS !   `,\n      confirmButtonColor: '#800080', // LEFT OPTION\n      denyButtonColor: '#008000', // RIGHT OPTION\n    })\n    .then((result) => {\n      if (result.isConfirmed) { // START USER\n        basicOptions()\n        shouldAIstart.current = false\n        setShouldAIstartState(false)\n        setTimeout(() => {\n          startTimer()\n          clickBlocked.current = false\n        }, 4300) // SYNC WITH POP-UP CLOSES\n      }\n      else if (result.isDenied) { // START AI\n        basicOptions()\n        clickBlocked.current = true\n        shouldAIstart.current = true\n        setShouldAIstartState(true)\n        setTimeout(() => {\n          startTimer()\n          AIAction()\n        }, 4300) // SYNC WITH POP-UP CLOSES\n      }\n      else addButtonAnimation()\n    })\n  }\n\n  const buttonNewGameHandler = () => {\n    continueFlowPopUp.current = false // CANCEL WINNER POP-UP WHEN USER CLICK \"NEW GAME\" BUTTON\n    removeButtonAnimation()\n    if (newGameStarted) {\n      Swal.fire({\n        title: `DO YOU WANT TO START A NEW GAME ?`,\n        text: 'All points gonna be lost !..',\n        icon: 'info',\n        showDenyButton: true,\n        confirmButtonText: 'START NEW GAME !',\n        denyButtonText: `CONTINUE PLAYING !`,\n        confirmButtonColor: '#800080', // LEFT OPTION\n        denyButtonColor: '#008000', // RIGHT OPTION\n      })\n      .then((result) => {\n        if (result.isConfirmed) selectOptions() // CONFIRM NEW GAME\n        // ELSE CONTINUE GAME === DO NOTHING\n      })\n\n    } else selectOptions() // WHEN NO CURRENT GAME\n  }\n\n  let offset = useRef(0);\n  let paused = useRef(true);\n\n  render();\n\n  function startTimer() {\n    if (paused.current) {\n      paused.current = false;\n      offset.current -= Date.now();\n      render();\n    }\n  }\n\n  function stopTimer() {\n    if (!paused.current) {\n      paused.current = true;\n      offset.current += Date.now();\n      render()\n    }\n  }\n\n  function resetTimer() {\n    if (paused.current) {\n      offset.current = 0;\n      render();\n    } else offset.current =- Date.now();\n  }\n\n  function format(value: any, scale: any, modulo: any, padding: any) {\n    value = Math.floor(value / scale) % modulo;\n    return value.toString().padStart(padding, 0);\n  }\n\n  function render() {\n\n    var value = paused.current ? offset.current : Date.now() + offset.current;\n\n    let miliseconds = document.getElementById('timer_ms')\n    if (miliseconds !== null) miliseconds.textContent = format(value, 1, 1000, 3);\n    let seconds = document.getElementById('timer_seconds')\n    if (seconds !== null) seconds.textContent = format(value, 1000, 60, 2);\n    let minutes = document.getElementById('timer_minutes')\n    if (minutes !== null) minutes.textContent = format(value, 60000, 60, 2);\n\n    if(!paused.current) requestAnimationFrame(render);\n  }\n\n  const startsIn = () => {\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n3..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 0)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n2..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 1000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `STARTS IN\\n1..`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1000\n      })\n    }, 2000)\n    setTimeout(() => {\n      Swal.fire({\n        title: `GO !!!`,\n        showConfirmButton: false,\n        showDenyButton: false,\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n        timer: 1300,\n      })\n    }, 3000)\n  }\n\n  console.log(\"rowsAndColumns\", rowsAndColumns.current)\n\n  return (\n    <div className={`${css.background} ${com.noSelect}`}>\n      <Button\n        id={`buttonStart`}\n        className={css.button}\n        variant=\"outlined\"\n        sx={{ color: 'white', background: 'blue', '&:hover': { background: 'green' } }}\n        onClick={() => {\n          buttonNewGameHandler()\n        }}\n      >\n        NEW GAME\n      </Button>\n      <div className={css.participants}>\n        <div className={css.participant}>\n          <div className={css.pointsTitle}>Points:</div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? null : newGameStarted && userTurn && !gameEnd.current ? `TURN ` : null }</div>\n          <div className={css.participantName}>You:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.X} </div></div>\n        </div>\n        <div className={css.participant}>\n          <div className={css.turn}>{ shouldAIstartState ? `TURN ` : newGameStarted && !userTurn && !gameEnd.current ? `TURN ` : null }</div>\n          <div className={css.participantName}>AI:</div>\n          <div className={css.points}><div className={css.innerPoints}> {points.O} </div></div>\n        </div>\n        <div className={css.finalWinner}>\n          {\n            gameEnd.current && winnerState === \"X\" ?\n            `WINNER: YOU !` :\n            gameEnd.current && winnerState === \"O\" ?\n            `WINNER: AI !` :\n            gameEnd.current && winnerState === \"TIED\" ?\n            `TIED GAME !` :\n            null\n          }\n        </div>\n        <div\n          style={{\n            display: newGameStarted ? 'flex' : 'none'\n          }}\n          id={`timerBox`}\n          className={css.timer}\n        >\n          <div>TIME:  </div>\n          <div id={`timer_minutes`} className={css.eachTime}>00</div>:\n          <div id={`timer_seconds`} className={css.eachTime}>00</div>\n          <div className={css.smallerMili}>:</div>\n          <div id={`timer_ms`} className={`${css.smallerMili} ${css.eachTimeMini}`}>000</div>\n        </div>\n      </div >\n      <div id={`rowsAndColumns`} className={css.rowsAndColumns}>\n        {\n          rowsAndColumns.current.map((e, index) => {\n            return (\n              <div\n                key={index}\n                id={`${index}`}\n                onClick={(e) => {\n                  if (!clickBlocked.current) {\n                    handleSequence({ target: index })\n                  }\n                }}\n                className={css.eachBox}\n              >\n                { rowsAndColumns.current[index].value }\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Main;","import { useState, useEffect, useRef } from \"react\";\nimport css from './App.module.css';\nimport './commons/globalSweetAlert2.css';\nimport { useSelector } from 'react-redux';\nimport { Route, Routes, useMatch, useLocation } from \"react-router-dom\";\nimport $ from 'jquery';\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n\n  return (\n   <div className={css.background}>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<>\n              <Main />\n              </>\n            }\n        />        \n      </Routes>\n      </div>\n  )\n}\n\nexport default App;","// import {\n//   recipesI, serverStatusI, navBarFiltersI, settingsFiltersI\n// } from '../interfaces/interfaces';\n\ninterface initialStateI {\n  serverStatus?: string,\n}\n\nconst initialState: initialStateI = {\n  serverStatus: 'asd',\n}\n\nconst reducer = (state = initialState, action: {type: string; payload: any}) => {\n  switch (action.type) {\n    case 'SET_INDEX_CHOOSEN':\n      return {\n        ...state,\n        indexChoosen: action.payload\n      };    \n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n","import { legacy_createStore as createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter basename=\"/tictactoe\">\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"MainCSS_background__1Q1tO\",\"button\":\"MainCSS_button__2c_QR\",\"noAnimation\":\"MainCSS_noAnimation__1uiwW\",\"onone\":\"MainCSS_onone__3mZ_2\",\"shakeAnimation\":\"MainCSS_shakeAnimation__fG_-C\",\"shake\":\"MainCSS_shake__SfRao\",\"changeColor\":\"MainCSS_changeColor__2-mW8\",\"changeCol\":\"MainCSS_changeCol__24VVs\",\"timer\":\"MainCSS_timer__3HWC8\",\"eachTime\":\"MainCSS_eachTime__3bWTB\",\"eachTimeMini\":\"MainCSS_eachTimeMini__2eU1d\",\"smallerMili\":\"MainCSS_smallerMili__3jRfz\",\"participants\":\"MainCSS_participants__2fMaH\",\"participant\":\"MainCSS_participant__3Hqsa\",\"turn\":\"MainCSS_turn__3rc7J\",\"blink\":\"MainCSS_blink__3XQfa\",\"participantName\":\"MainCSS_participantName__Nj8p0\",\"pointsTitle\":\"MainCSS_pointsTitle__1Lx4I\",\"points\":\"MainCSS_points__2hJpt\",\"innerPoints\":\"MainCSS_innerPoints__21ZiP\",\"finalWinner\":\"MainCSS_finalWinner__2pYW0\",\"rowsAndColumns\":\"MainCSS_rowsAndColumns__2GrZo\",\"crossCircle\":\"MainCSS_crossCircle__1T8V_\",\"cross\":\"MainCSS_cross__3wO_9\",\"circle\":\"MainCSS_circle__29slD\",\"eachRow\":\"MainCSS_eachRow__3aF6L\",\"eachBox\":\"MainCSS_eachBox__3qaSx\"};"],"sourceRoot":""}