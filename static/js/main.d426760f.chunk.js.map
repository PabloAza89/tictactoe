{"version":3,"sources":["App.module.css","components/Main/Main.tsx","App.tsx","reducers/index.ts","store/store.ts","index.tsx","components/Main/MainCSS.module.css"],"names":["module","exports","Main","rowsAndColumns","setRowsAndColumns","useState","checked","value","clickBlocked","setClickBlocked","IAvalue","useRef","Math","floor","random","handleClick","async","target","_ref","copyRowsAndColumns","userAction","then","setTimeout","filter","e","length","current","success","IAResponse","console","log","Swal","fire","title","icon","showConfirmButton","showDenyButton","showCancelButton","timer","_jsxs","className","css","background","children","crossCircle","_jsx","cross","circle","map","index","id","concat","onClick","eachBox","App","Routes","Route","path","element","_Fragment","initialState","serverStatus","reducer","state","arguments","undefined","action","type","indexChoosen","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","React","StrictMode","Provider","BrowserRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d426760f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__3CDGK\"};","import css from './MainCSS.module.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from '@mui/material/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nconst Main = () => {\n\n  const [ rowsAndColumns, setRowsAndColumns ] = useState<any[]>(\n    [\n      {checked: false, value: ''}, {checked: false, value: ''}, {checked: false, value: ''},\n      {checked: false, value: ''}, {checked: false, value: ''}, {checked: false, value: ''},\n      {checked: false, value: ''}, {checked: false, value: ''}, {checked: false, value: ''}\n    ]\n  )\n\n  const [ clickBlocked, setClickBlocked ] = useState(false)\n\n  let IAvalue = useRef(Math.floor(Math.random() * 9))\n\n  const handleClick = async ({ target }: any) => {\n\n    const userAction = async () => {\n      let copyRowsAndColumns = [...rowsAndColumns]\n\n      if (copyRowsAndColumns[target].value === \"\" && !clickBlocked) {\n        setClickBlocked(true)\n        rowsAndColumns[target].value = \"X\"\n        setRowsAndColumns(copyRowsAndColumns)\n      }\n\n      //console.log(\"123 filter(e => e.value === '').length\", copyRowsAndColumns.filter(e => e.value === '').length)\n    }\n\n    const IAResponse = async () => {\n    \n     \n     \n   \n     /* BEGIN RANDOM IA SECTION */\n\n     let copyRowsAndColumns = [...rowsAndColumns]\n\n   if (copyRowsAndColumns.filter(e => e.value === '').length > 1) {\n       \n     if (copyRowsAndColumns[IAvalue.current].value === \"\") {        \n         copyRowsAndColumns[IAvalue.current].value = \"O\"\n         setRowsAndColumns(copyRowsAndColumns)\n         setClickBlocked(false)\n         \n     } else {\n       let success = false\n       do {\n         IAvalue.current = Math.floor(Math.random() * 9)\n         if (copyRowsAndColumns[IAvalue.current].value === \"\") {                \n               copyRowsAndColumns[IAvalue.current].value = \"O\"\n               setRowsAndColumns(copyRowsAndColumns)\n               setClickBlocked(false)\n           success = true\n         }\n       } while (copyRowsAndColumns[IAvalue.current].value !== \"\" && success === false)\n     }\n\n     \n   \n   } //\n\n /* END RANDOM IA SECTION */\n\n // console.log(\"123 actual\", rowsAndColumns)\n\n }\n\n  userAction()\n  .then(() =>\n    {  \n      if (!clickBlocked) {\n        setTimeout(() => {  IAResponse()  }, 700)\n\n        let copyRowsAndColumns = [...rowsAndColumns]\n        if (copyRowsAndColumns.filter(e => e.value === '').length === 0) {\n          console.log(\"123 GAME END\")\n          setTimeout(() => {\n            Swal.fire({\n              title: `GAME END !`,\n              icon: 'success',\n              showConfirmButton: false,\n              showDenyButton: false,\n              showCancelButton: false,\n              timer: 1000,\n            })\n          }, 500)\n        }\n\n\n      }\n    }\n  )}\n\n  \n  // function TEST(index) {\n  //   useEffect(() => {\n  //     return rowsAndColumns[index].value\n  //   },[rowsAndColumns])\n  // }\n    \n\n  \n\n  return (\n    <div className={css.background}>\n      <div className={css.crossCircle}>\n        <div className={css.cross}>X</div>\n        <div className={css.circle}>O</div>\n      </div>\n      <div className={css.rowsAndColumns}>\n        {\n          rowsAndColumns.map((e, index) => {\n            return (\n              <div\n                key={index}\n                id={`${index}`}\n                onClick={(e) => { handleClick({ target: index }) }}\n                className={css.eachBox}\n              >\n                {/* {rowsAndColumns[parseInt((e.target as HTMLInputElement).id, 10)].value} */}\n                { rowsAndColumns[index].value }\n              </div>\n            )\n          })\n        }\n      </div>\n\n\n\n    </div>\n  );\n}\n\nexport default Main;","import { useState, useEffect, useRef } from \"react\";\nimport css from './App.module.css';\nimport './commons/globalSweetAlert2.css';\nimport { useSelector } from 'react-redux';\nimport { Route, Routes, useMatch, useLocation } from \"react-router-dom\";\nimport $ from 'jquery';\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n\n  return (\n   <div className={css.background}>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<>\n              <Main />\n              </>\n            }\n        />        \n      </Routes>\n      </div>\n  )\n}\n\nexport default App;","// import {\n//   recipesI, serverStatusI, navBarFiltersI, settingsFiltersI\n// } from '../interfaces/interfaces';\n\ninterface initialStateI {\n  serverStatus?: string,\n}\n\nconst initialState: initialStateI = {\n  serverStatus: 'asd',\n}\n\nconst reducer = (state = initialState, action: {type: string; payload: any}) => {\n  switch (action.type) {\n    case 'SET_INDEX_CHOOSEN':\n      return {\n        ...state,\n        indexChoosen: action.payload\n      };    \n    default:\n      return state\n  }\n};\n\nexport default reducer;\n\n","import { legacy_createStore as createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  { Provider } from 'react-redux';\nimport store from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter basename=\"/tictactoe\">\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"MainCSS_background__1Q1tO\",\"rowsAndColumns\":\"MainCSS_rowsAndColumns__2GrZo\",\"crossCircle\":\"MainCSS_crossCircle__1T8V_\",\"cross\":\"MainCSS_cross__3wO_9\",\"circle\":\"MainCSS_circle__29slD\",\"eachRow\":\"MainCSS_eachRow__3aF6L\",\"eachBox\":\"MainCSS_eachBox__3qaSx\"};"],"sourceRoot":""}